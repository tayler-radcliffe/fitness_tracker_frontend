{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/MyRoutines.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { fetchUsername, getCurrentToken, fetchUserRoutines } from '../api';\nimport MyRoutine from './MyRoutine';\nimport Button from '@material-ui/core/Button';\nimport RoutineForm from './RoutineForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyRoutines = () => {\n  _s();\n\n  const [routines, setRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [currentUser, setCurrentUser] = useState('');\n  const [open, setIsOpen] = useState(false);\n  useEffect(() => {\n    fetchUsername().then(data => setCurrentUser(data.username));\n    fetchUserRoutines(currentUser).then(({\n      data\n    }) => setRoutines(data));\n  });\n  console.log(currentUser);\n  console.log(routines);\n\n  const showForm = () => {\n    if (open === false) {\n      setIsOpen(true);\n    } else {\n      setIsOpen(false);\n    }\n  };\n\n  if (getCurrentToken()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Routines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        type: \"submit\",\n        onClick: showForm,\n        children: \"Create A New Routine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(RoutineForm, {\n        routines: routines,\n        open: open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(MyRoutine, {\n        creator: creator,\n        setCreator: setCreator,\n        routine: routine\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Use the form above to start creating routines.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myRoutines\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please register or sign in to see your routines.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 11\n  }, this);\n};\n\n_s(MyRoutines, \"Sb0r8daRQkywCxXzbIcI4B5h5Y8=\");\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/MyRoutines.js"],"names":["React","useEffect","useState","fetchUsername","getCurrentToken","fetchUserRoutines","MyRoutine","Button","RoutineForm","MyRoutines","routines","setRoutines","creator","setCreator","currentUser","setCurrentUser","open","setIsOpen","then","data","username","console","log","showForm","map","routine","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,iBAAzC,QAAkE,QAAlE;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,IAAD,EAAOC,SAAP,IAAoBf,QAAQ,CAAC,KAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,aAAa,GACZe,IADD,CACOC,IAAD,IAAUJ,cAAc,CAACI,IAAI,CAACC,QAAN,CAD9B;AAEAf,IAAAA,iBAAiB,CAACS,WAAD,CAAjB,CACCI,IADD,CACM,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAYR,WAAW,CAACQ,IAAD,CAD7B;AAED,GALQ,CAAT;AAOAE,EAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;;AAGA,QAAMa,QAAQ,GAAG,MAAM;AACnB,QAAIP,IAAI,KAAK,KAAb,EAAmB;AACdC,MAAAA,SAAS,CAAC,IAAD,CAAT;AAAgB,KADrB,MAEK;AACDA,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH;AACJ,GAND;;AASF,MAAGb,eAAe,EAAlB,EAAsB;AACpB,wBACA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEO,QAAC,MAAD;AACG,QAAA,KAAK,EAAC,WADT;AAEG,QAAA,OAAO,EAAC,WAFX;AAGG,QAAA,IAAI,EAAC,QAHR;AAIG,QAAA,OAAO,EAAEmB,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFP,eAOY,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEb,QAAvB;AAAiC,QAAA,IAAI,EAAEM;AAAvC;AAAA;AAAA;AAAA;AAAA,cAPZ,EAQSN,QAAQ,GAAGA,QAAQ,CAACc,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBACzB,QAAC,SAAD;AACE,QAAA,OAAO,EAAEd,OADX;AAEE,QAAA,UAAU,EAAEC,UAFd;AAGc,QAAA,OAAO,EAAEY;AAHvB,SAGOC,KAHP;AAAA;AAAA;AAAA;AAAA,cADY,CAAH,gBAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAgBE,GAjBJ,MAiBU,oBACF;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADE;AAKT,CAlDH;;GAAMjB,U;;KAAAA,U;AAqDN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { fetchUsername, getCurrentToken, fetchUserRoutines } from '../api';\nimport MyRoutine from './MyRoutine';\nimport Button from '@material-ui/core/Button';\nimport RoutineForm from './RoutineForm';\n\n\nconst MyRoutines = () => {\n  \n    const [routines, setRoutines] = useState([]);\n    const [creator, setCreator] = useState('');\n    const [currentUser, setCurrentUser] = useState('');\n    const [open, setIsOpen] = useState(false);\n\n    useEffect(() => {\n      fetchUsername()\n      .then((data) => setCurrentUser(data.username))\n      fetchUserRoutines(currentUser)\n      .then(({data}) => setRoutines(data))\n    })\n\n    console.log(currentUser)      \n     \n    console.log(routines)\n\n   \n    const showForm = () => {\n        if (open === false){\n             setIsOpen(true)}\n        else {\n            setIsOpen(false)\n        }\n    }\n\n\n  if(getCurrentToken()) {\n    return (\n    <div>\n      <h1>My Routines</h1>\n           <Button \n              color=\"secondary\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={showForm}>Create A New Routine</Button>\n                <RoutineForm routines={routines} open={open}/>\n            {routines ? routines.map((routine, index) => \n            <MyRoutine \n              creator={creator} \n              setCreator={setCreator} \n              key={index} routine={routine} />) \n              : <h1>Use the form above to start creating routines.</h1>}\n         </div>\n    )} else return (\n          <div className='myRoutines'>\n          <h1>Please register or sign in to see your routines.</h1>\n      </div>\n    )\n  }\n\n\nexport default MyRoutines;"]},"metadata":{},"sourceType":"module"}