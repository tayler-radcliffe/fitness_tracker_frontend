{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/Routines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchRoutines, getCurrentToken, createRoutine } from '../api';\nimport Routine from './Routine';\nimport Button from '@material-ui/core/Button';\nimport './style.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RoutineForm from './RoutineForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Routines = ({\n  currentUser,\n  setCurrentUser,\n  setMyRoutines\n}) => {\n  _s();\n\n  const [routines, setRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [open, setIsOpen] = useState(false);\n  useEffect(() => {\n    Promise.all([fetchRoutines()]).then(([data]) => {\n      setRoutines(data);\n    });\n  }, []);\n\n  const showForm = () => {\n    if (open === false) {\n      setIsOpen(true);\n    } else {\n      setIsOpen(false);\n    }\n  };\n\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      position: 'relative',\n      margin: '10px'\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '350px',\n      margin: theme.spacing(2)\n    }\n  }));\n  const classes = useStyles();\n\n  if (getCurrentToken()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routine-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fitness Routines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.container,\n        color: \"secondary\",\n        variant: \"contained\",\n        type: \"submit\",\n        onClick: showForm,\n        children: \"Create A New Routine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoutineForm, {\n        setMyRoutines: setMyRoutines,\n        routines: routines,\n        open: open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(Routine, {\n        currentUser: currentUser,\n        setCurrentUser: setCurrentUser,\n        creator: creator,\n        setCreator: setCreator,\n        routine: routine\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"publicRoutines\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fitness Routines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(Routine, {\n      currentUser: currentUser,\n      setCurrentUser: setCurrentUser,\n      creator: creator,\n      setCreator: setCreator,\n      routine: routine\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Routines, \"Qx3mIBljLXmQ14Sgp9NZb00XIho=\", true);\n\n_c = Routines;\nexport default Routines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routines\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/Routines.js"],"names":["React","useEffect","useState","fetchRoutines","getCurrentToken","createRoutine","Routine","Button","makeStyles","RoutineForm","Routines","currentUser","setCurrentUser","setMyRoutines","routines","setRoutines","creator","setCreator","open","setIsOpen","Promise","all","then","data","showForm","useStyles","theme","container","display","flexWrap","position","margin","formControl","spacing","minWidth","textFields","width","classes","map","routine","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,aAAzC,QAA8D,QAA9D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,aAAP;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,cAAf;AAA+BC,EAAAA;AAA/B,CAAD,KAAoD;AAAA;;AAEnE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgB,IAAD,EAAOC,SAAP,IAAoBjB,QAAQ,CAAC,KAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAClB,aAAa,EAAd,CAAZ,EAA+BmB,IAA/B,CAAoC,CAAC,CAACC,IAAD,CAAD,KAAY;AAC9CR,MAAAA,WAAW,CAACQ,IAAD,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAIN,IAAI,KAAK,KAAb,EAAoB;AAClBC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFD,MAGK;AACHA,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GAPD;;AASA,QAAMM,SAAS,GAAGjB,UAAU,CAAEkB,KAAD,KAAY;AACvCC,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE,MADA;AAETC,MAAAA,QAAQ,EAAE,MAFD;AAGTC,MAAAA,QAAQ,EAAE,UAHD;AAITC,MAAAA,MAAM,EAAE;AAJC,KAD4B;AAOvCC,IAAAA,WAAW,EAAE;AACXD,MAAAA,MAAM,EAAEL,KAAK,CAACO,OAAN,CAAc,CAAd,CADG;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAP0B;AAWvCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE,OADG;AAEVL,MAAAA,MAAM,EAAEL,KAAK,CAACO,OAAN,CAAc,CAAd;AAFE;AAX2B,GAAZ,CAAD,CAA5B;AAiBA,QAAMI,OAAO,GAAGZ,SAAS,EAAzB;;AAGA,MAAIrB,eAAe,EAAnB,EAAuB;AACrB,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,SAAS,EAAEiC,OAAO,CAACV,SADrB;AAEE,QAAA,KAAK,EAAC,WAFR;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,OAAO,EAAEH,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,WAAD;AAAa,QAAA,aAAa,EAAEX,aAA5B;AAA2C,QAAA,QAAQ,EAAEC,QAArD;AAA+D,QAAA,IAAI,EAAEI;AAArE;AAAA;AAAA;AAAA;AAAA,cARF,EASGJ,QAAQ,GAAGA,QAAQ,CAACwB,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBACvB,QAAC,OAAD;AAAS,QAAA,WAAW,EAAE7B,WAAtB;AACE,QAAA,cAAc,EAAEC,cADlB;AAEE,QAAA,OAAO,EAAEI,OAFX;AAGE,QAAA,UAAU,EAAEC,UAHd;AAKE,QAAA,OAAO,EAAEsB;AALX,SAIOC,KAJP;AAAA;AAAA;AAAA;AAAA,cADU,CAAH,GAMmB,IAf9B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD,GApBD,MAqBK,oBACH;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG1B,QAAQ,GAAGA,QAAQ,CAACwB,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBACvB,QAAC,OAAD;AAAS,MAAA,WAAW,EAAE7B,WAAtB;AAAmC,MAAA,cAAc,EAAEC,cAAnD;AACE,MAAA,OAAO,EAAEI,OADX;AAEE,MAAA,UAAU,EAAEC,UAFd;AAGc,MAAA,OAAO,EAAEsB;AAHvB,OAGOC,KAHP;AAAA;AAAA;AAAA;AAAA,YADU,CAAH,GAI+B,IAN1C;AAAA;AAAA;AAAA;AAAA;AAAA,UADG;AAUN,CAxED;;GAAM9B,Q;;KAAAA,Q;AA4EN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchRoutines, getCurrentToken, createRoutine } from '../api';\nimport Routine from './Routine';\nimport Button from '@material-ui/core/Button';\nimport './style.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RoutineForm from './RoutineForm';\n\n\nconst Routines = ({ currentUser, setCurrentUser, setMyRoutines }) => {\n\n  const [routines, setRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [open, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    Promise.all([fetchRoutines()]).then(([data]) => {\n      setRoutines(data);\n    });\n  }, [])\n\n  const showForm = () => {\n    if (open === false) {\n      setIsOpen(true)\n    }\n    else {\n      setIsOpen(false)\n    }\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      position: 'relative',\n      margin: '10px',\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120,\n    },\n    textFields: {\n      width: '350px',\n      margin: theme.spacing(2)\n    },\n  }));\n\n  const classes = useStyles();\n\n\n  if (getCurrentToken()) {\n    return (\n      <div className='routine-card'>\n        <h1>Fitness Routines</h1>\n        <Button\n          className={classes.container}\n          color=\"secondary\"\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={showForm}>Create A New Routine</Button>\n        <RoutineForm setMyRoutines={setMyRoutines} routines={routines} open={open} />\n        {routines ? routines.map((routine, index) =>\n          <Routine currentUser={currentUser}\n            setCurrentUser={setCurrentUser}\n            creator={creator}\n            setCreator={setCreator}\n            key={index}\n            routine={routine} />) : null}\n      </div>\n    )\n  }\n  else return (\n    <div className='publicRoutines'>\n      <h1>Fitness Routines</h1>\n      {routines ? routines.map((routine, index) =>\n        <Routine currentUser={currentUser} setCurrentUser={setCurrentUser}\n          creator={creator}\n          setCreator={setCreator}\n          key={index} routine={routine} />) : null}\n    </div>\n  )\n}\n\n\n\nexport default Routines;"]},"metadata":{},"sourceType":"module"}