{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/Activities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchActivities, getCurrentToken } from '../api';\nimport Activity from './Activity';\nimport Button from '@material-ui/core/Button';\nimport AddActivityForm from './AddActivityForm';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const createActivity = async ({\n  activityName,\n  activityDescription\n}) => {\n  await fetch('https://fitnesstrac-kr.herokuapp.com/api/activities', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getCurrentToken()}`\n    },\n    body: JSON.stringify({\n      name: activityName,\n      description: activityDescription\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n\n    if (result.error) {\n      swal({\n        title: 'Oops',\n        text: result.error,\n        icon: 'error'\n      });\n    } else {\n      swal('Success', 'Your activity has been created!', 'success');\n    }\n  }).catch(console.error);\n};\n\nconst Activities = () => {\n  _s();\n\n  const [activities, setActivities] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [open, setIsOpen] = useState(false);\n  useEffect(() => {\n    Promise.all([fetchActivities()]).then(([data]) => {\n      setActivities(data);\n    });\n  }, []);\n\n  const showForm = () => {\n    if (open === false) {\n      setIsOpen(true);\n    } else {\n      setIsOpen(false);\n    }\n  };\n\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      position: 'relative',\n      margin: '10px'\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '350px',\n      margin: theme.spacing(2)\n    }\n  }));\n  const classes = useStyles();\n\n  if (getCurrentToken()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activities\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Activities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.container,\n        onClick: showForm,\n        color: \"secondary\",\n        variant: \"contained\",\n        children: \"Create A New Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddActivityForm, {\n        setIsOpen: setIsOpen,\n        open: open,\n        setActivities: setActivities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), activities ? activities.map((activity, index) => /*#__PURE__*/_jsxDEV(Activity, {\n        creator: creator,\n        setCreator: setCreator,\n        activity: activity\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 59\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activities\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Activities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), activities ? activities.map((activity, index) => /*#__PURE__*/_jsxDEV(Activity, {\n        creator: creator,\n        setCreator: setCreator,\n        activity: activity\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 59\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Activities, \"pBFvPnjIyITmAvdkVqP0k0BRrb8=\", true);\n\n_c = Activities;\nexport default Activities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activities\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/Activities.js"],"names":["React","useEffect","useState","fetchActivities","getCurrentToken","Activity","Button","AddActivityForm","makeStyles","createActivity","activityName","activityDescription","fetch","method","headers","body","JSON","stringify","name","description","then","response","json","result","console","log","error","swal","title","text","icon","catch","Activities","activities","setActivities","creator","setCreator","open","setIsOpen","Promise","all","data","showForm","useStyles","theme","container","display","flexWrap","position","margin","formControl","spacing","minWidth","textFields","width","classes","map","activity","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,QAAjD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAP,KAAiD;AAC7E,QAAMC,KAAK,CAAC,qDAAD,EAAwD;AACjEC,IAAAA,MAAM,EAAE,MADyD;AAEjEC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAkB,UAASV,eAAe,EAAG;AAFtC,KAFwD;AAMjEW,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,IAAI,EAAER,YADa;AAEnBS,MAAAA,WAAW,EAAER;AAFM,KAAf;AAN2D,GAAxD,CAAL,CAUHS,IAVG,CAUEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAVd,EAWHF,IAXG,CAWEG,MAAM,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,QAAIA,MAAM,CAACG,KAAX,EAAkB;AAChBC,MAAAA,IAAI,CAAC;AACHC,QAAAA,KAAK,EAAE,MADJ;AAEHC,QAAAA,IAAI,EAAEN,MAAM,CAACG,KAFV;AAGHI,QAAAA,IAAI,EAAE;AAHH,OAAD,CAAJ;AAKD,KAND,MAMO;AACLH,MAAAA,IAAI,CAAC,SAAD,EAAY,iCAAZ,EAA+C,SAA/C,CAAJ;AACD;AACF,GAtBG,EAuBHI,KAvBG,CAuBGP,OAAO,CAACE,KAvBX,CAAN;AAwBD,CAzBM;;AA4BP,MAAMM,UAAU,GAAG,MAAM;AAAA;;AAEvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiC,OAAD,EAAUC,UAAV,IAAwBlC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmC,IAAD,EAAOC,SAAP,IAAoBpC,QAAQ,CAAC,KAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdsC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACrC,eAAe,EAAhB,CAAZ,EAAiCiB,IAAjC,CAAsC,CAAC,CAACqB,IAAD,CAAD,KAAY;AAChDP,MAAAA,aAAa,CAACO,IAAD,CAAb;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAIL,IAAI,KAAK,KAAb,EAAoB;AAClBC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFD,MAGK;AACHA,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GAPD;;AASA,QAAMK,SAAS,GAAGnC,UAAU,CAAEoC,KAAD,KAAY;AACvCC,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE,MADA;AAETC,MAAAA,QAAQ,EAAE,MAFD;AAGTC,MAAAA,QAAQ,EAAE,UAHD;AAITC,MAAAA,MAAM,EAAE;AAJC,KAD4B;AAOvCC,IAAAA,WAAW,EAAE;AACXD,MAAAA,MAAM,EAAEL,KAAK,CAACO,OAAN,CAAc,CAAd,CADG;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAP0B;AAWvCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE,OADG;AAEVL,MAAAA,MAAM,EAAEL,KAAK,CAACO,OAAN,CAAc,CAAd;AAFE;AAX2B,GAAZ,CAAD,CAA5B;AAiBA,QAAMI,OAAO,GAAGZ,SAAS,EAAzB;;AAEA,MAAIvC,eAAe,EAAnB,EAAuB;AACrB,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEmD,OAAO,CAACV,SAA3B;AACE,QAAA,OAAO,EAAEH,QADX;AAEE,QAAA,KAAK,EAAC,WAFR;AAGE,QAAA,OAAO,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAEJ,SAA5B;AAAuC,QAAA,IAAI,EAAED,IAA7C;AAAmD,QAAA,aAAa,EAAEH;AAAlE;AAAA;AAAA;AAAA;AAAA,cANF,EAOGD,UAAU,GAAGA,UAAU,CAACuB,GAAX,CAAe,CAACC,QAAD,EAAWC,KAAX,kBAAqB,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEvB,OAAnB;AAA4B,QAAA,UAAU,EAAEC,UAAxC;AAAgE,QAAA,QAAQ,EAAEqB;AAA1E,SAAyDC,KAAzD;AAAA;AAAA;AAAA;AAAA,cAApC,CAAH,GAAiI,IAP9I;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAZD,MAYO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGzB,UAAU,GAAGA,UAAU,CAACuB,GAAX,CAAe,CAACC,QAAD,EAAWC,KAAX,kBAAqB,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEvB,OAAnB;AAA4B,QAAA,UAAU,EAAEC,UAAxC;AAAgE,QAAA,QAAQ,EAAEqB;AAA1E,SAAyDC,KAAzD;AAAA;AAAA;AAAA;AAAA,cAApC,CAAH,GAAiI,IAF9I;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;AACF,CA7DD;;GAAM1B,U;;KAAAA,U;AAgEN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchActivities, getCurrentToken } from '../api';\nimport Activity from './Activity';\nimport Button from '@material-ui/core/Button';\nimport AddActivityForm from './AddActivityForm';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const createActivity = async ({ activityName, activityDescription }) => {\n  await fetch('https://fitnesstrac-kr.herokuapp.com/api/activities', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getCurrentToken()}`\n    },\n    body: JSON.stringify({\n      name: activityName,\n      description: activityDescription\n    })\n  }).then(response => response.json())\n    .then(result => {\n      console.log(result);\n      if (result.error) {\n        swal({\n          title: 'Oops',\n          text: result.error,\n          icon: 'error'\n        })\n      } else {\n        swal('Success', 'Your activity has been created!', 'success')\n      }\n    })\n    .catch(console.error);\n}\n\n\nconst Activities = () => {\n\n  const [activities, setActivities] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [open, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    Promise.all([fetchActivities()]).then(([data]) => {\n      setActivities(data);\n    });\n  }, [])\n\n  const showForm = () => {\n    if (open === false) {\n      setIsOpen(true)\n    }\n    else {\n      setIsOpen(false)\n    }\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      position: 'relative',\n      margin: '10px',\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120,\n    },\n    textFields: {\n      width: '350px',\n      margin: theme.spacing(2)\n    },\n  }));\n\n  const classes = useStyles();\n\n  if (getCurrentToken()) {\n    return (\n      <div className='activities'>\n        <h1>Activities</h1>\n        <Button className={classes.container}\n          onClick={showForm}\n          color='secondary'\n          variant='contained'>Create A New Activity</Button>\n        <AddActivityForm setIsOpen={setIsOpen} open={open} setActivities={setActivities} />\n        {activities ? activities.map((activity, index) => <Activity creator={creator} setCreator={setCreator} key={index} activity={activity} />) : null}\n      </div>\n    )\n  } else {\n    return (\n      <div className='activities'>\n        <h1>Activities</h1>\n        {activities ? activities.map((activity, index) => <Activity creator={creator} setCreator={setCreator} key={index} activity={activity} />) : null}\n      </div>\n\n    )\n  }\n}\n\n\nexport default Activities;"]},"metadata":{},"sourceType":"module"}