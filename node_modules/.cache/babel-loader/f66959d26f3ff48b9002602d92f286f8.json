{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/AddActivityForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './style.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createActivity } from './Activities';\nimport { fetchActivities } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddActivityForm = ({\n  setIsOpen,\n  open,\n  setActivities\n}) => {\n  _s();\n\n  const [activityName, setActivityName] = useState('');\n  const [activityDescription, setActivityDescription] = useState('');\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '300px',\n      margin: theme.spacing(1)\n    }\n  }));\n  const classes = useStyles();\n\n  if (open === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: async e => {\n          e.preventDefault();\n          createActivity({\n            activityName,\n            activityDescription\n          });\n          const data = await fetchActivities();\n          setActivities(data);\n          setActivityName('');\n          setActivityDescription('');\n          setIsOpen(false);\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          label: \"Name\",\n          variant: \"outlined\",\n          size: \"small\",\n          required: true,\n          onChange: e => setActivityName(e.target.value),\n          value: activityName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          label: \"Description\",\n          size: \"small\",\n          variant: \"outlined\",\n          required: true,\n          onChange: e => setActivityDescription(e.target.value),\n          value: activityDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.textFields,\n          color: \"primary\",\n          variant: \"contained\",\n          type: \"submit\",\n          children: \"Create Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 17\n  }, this);\n};\n\n_s(AddActivityForm, \"qdwOPt3UayYd8zWyeE/zTtiSris=\", true);\n\n_c = AddActivityForm;\nexport default AddActivityForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddActivityForm\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/AddActivityForm.js"],"names":["React","useState","Button","TextField","makeStyles","createActivity","fetchActivities","AddActivityForm","setIsOpen","open","setActivities","activityName","setActivityName","activityDescription","setActivityDescription","useStyles","theme","container","display","flexWrap","formControl","margin","spacing","minWidth","textFields","width","classes","e","preventDefault","data","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,aAAP;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,eAAT,QAAgC,QAAhC;;;AAGA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA;AAAnB,CAAD,KAAwC;AAAA;;AAE9D,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,mBAAD,EAAsBC,sBAAtB,IAAgDb,QAAQ,CAAC,EAAD,CAA9D;AAEA,QAAMc,SAAS,GAAGX,UAAU,CAAEY,KAAD,KAAY;AACvCC,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE,MADA;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAD4B;AAKvCC,IAAAA,WAAW,EAAE;AACXC,MAAAA,MAAM,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADG;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAL0B;AASvCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE,OADG;AAEVJ,MAAAA,MAAM,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AAFE;AAT2B,GAAZ,CAAD,CAA5B;AAeA,QAAMI,OAAO,GAAGX,SAAS,EAAzB;;AAIA,MAAIN,IAAI,KAAK,IAAb,EAAmB;AACjB,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAE,MAAOkB,CAAP,IAAa;AAC3BA,UAAAA,CAAC,CAACC,cAAF;AACAvB,UAAAA,cAAc,CAAC;AAAEM,YAAAA,YAAF;AAAgBE,YAAAA;AAAhB,WAAD,CAAd;AACA,gBAAMgB,IAAI,GAAG,MAAMvB,eAAe,EAAlC;AACAI,UAAAA,aAAa,CAACmB,IAAD,CAAb;AACAjB,UAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,UAAAA,sBAAsB,CAAC,EAAD,CAAtB;AACAN,UAAAA,SAAS,CAAC,KAAD,CAAT;AACD,SARD;AAAA,gCASE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEkB,OAAO,CAACF,UAA9B;AACE,UAAA,KAAK,EAAC,MADR;AAEE,UAAA,OAAO,EAAC,UAFV;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,QAAQ,MAJV;AAIW,UAAA,QAAQ,EAAGG,CAAD,IAAOf,eAAe,CAACe,CAAC,CAACG,MAAF,CAASC,KAAV,CAJ3C;AAKE,UAAA,KAAK,EAAEpB;AALT;AAAA;AAAA;AAAA;AAAA,gBATF,eAgBE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEe,OAAO,CAACF,UAA9B;AACE,UAAA,KAAK,EAAC,aADR;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,OAAO,EAAC,UAHV;AAIE,UAAA,QAAQ,MAJV;AAIW,UAAA,QAAQ,EAAGG,CAAD,IAAOb,sBAAsB,CAACa,CAAC,CAACG,MAAF,CAASC,KAAV,CAJlD;AAKE,UAAA,KAAK,EAAElB;AALT;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAuBE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEa,OAAO,CAACF,UAA3B;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD,GAlCD,MAkCO,oBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACR,CA3DD;;GAAMjB,e;;KAAAA,e;AA6DN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './style.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createActivity } from './Activities'\nimport { fetchActivities } from '../api';\n\n\nconst AddActivityForm = ({ setIsOpen, open, setActivities }) => {\n\n  const [activityName, setActivityName] = useState('');\n  const [activityDescription, setActivityDescription] = useState('');\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120,\n    },\n    textFields: {\n      width: '300px',\n      margin: theme.spacing(1)\n    },\n  }));\n\n  const classes = useStyles();\n\n\n\n  if (open === true) {\n    return (\n      <div className='activity-form'>\n        <form onSubmit={async (e) => {\n          e.preventDefault();\n          createActivity({ activityName, activityDescription });\n          const data = await fetchActivities();\n          setActivities(data);\n          setActivityName('');\n          setActivityDescription('');\n          setIsOpen(false);\n        }} >\n          <TextField className={classes.textFields}\n            label='Name'\n            variant=\"outlined\"\n            size='small'\n            required onChange={(e) => setActivityName(e.target.value)}\n            value={activityName} />\n\n          <TextField className={classes.textFields}\n            label='Description'\n            size='small'\n            variant=\"outlined\"\n            required onChange={(e) => setActivityDescription(e.target.value)}\n            value={activityDescription} />\n\n          <Button className={classes.textFields}\n            color='primary'\n            variant=\"contained\"\n            type='submit'>Create Activity</Button>\n        </form>\n      </div>\n\n    )\n  } else return <div></div>;\n}\n\nexport default AddActivityForm;"]},"metadata":{},"sourceType":"module"}