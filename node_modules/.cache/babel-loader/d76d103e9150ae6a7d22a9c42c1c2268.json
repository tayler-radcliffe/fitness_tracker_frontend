{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/MyRoutines.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { createRoutine } from './Routines';\nimport { fetchUsername, getCurrentToken, fetchUserRoutines } from '../api';\nimport MyRoutine from './MyRoutine';\nimport Button from '@material-ui/core/Button';\nimport RoutineForm from './RoutineForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyRoutines = () => {\n  _s();\n\n  const [routines, setRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [routineName, setRoutineName] = useState('');\n  const [routineGoal, setRoutineGoal] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n  const [currentUser, setCurrentUser] = useState('');\n  const [open, setIsOpen] = useState(false);\n  useEffect(() => {\n    fetchUsername().then(data => setCurrentUser(data.username));\n  });\n  useEffect(() => {\n    fetchUserRoutines().then(data => setRoutines(data));\n  });\n\n  const showForm = () => {\n    if (open === false) {\n      setIsOpen(true);\n    } else {\n      setIsOpen(false);\n    }\n  }; //  useEffect(() => {\n  //   fetchUserRoutines(currentUser)\n  //   .then((data) => console.log(data))\n  // }, [])\n  //unsure of how to get username inside url parameter???\n\n\n  if (getCurrentToken()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Routines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        type: \"submit\",\n        onClick: () => showForm,\n        children: \"Create A New Routine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(RoutineForm, {\n        routine: routine,\n        open: open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(MyRoutine, {\n        creator: creator,\n        setCreator: setCreator,\n        routine: routine\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Use the form above to start creating routines.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myRoutines\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please register or sign in to see your routines.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 11\n  }, this);\n};\n\n_s(MyRoutines, \"69Sa3qCEEJzfSricvtmV9UQ526M=\");\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/MyRoutines.js"],"names":["React","useEffect","useState","createRoutine","fetchUsername","getCurrentToken","fetchUserRoutines","MyRoutine","Button","RoutineForm","MyRoutines","routines","setRoutines","creator","setCreator","routineName","setRoutineName","routineGoal","setRoutineGoal","isPublic","setIsPublic","currentUser","setCurrentUser","open","setIsOpen","then","data","username","showForm","routine","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,iBAAzC,QAAkE,QAAlE;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqB,IAAD,EAAOC,SAAP,IAAoBtB,QAAQ,CAAC,KAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,aAAa,GACZqB,IADD,CACOC,IAAD,IAAUJ,cAAc,CAACI,IAAI,CAACC,QAAN,CAD9B;AAED,GAHQ,CAAT;AAKA1B,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,iBAAiB,GAChBmB,IADD,CACOC,IAAD,IAAUd,WAAW,CAACc,IAAD,CAD3B;AAED,GAHQ,CAAT;;AAMA,QAAME,QAAQ,GAAG,MAAM;AACnB,QAAIL,IAAI,KAAK,KAAb,EAAmB;AACdC,MAAAA,SAAS,CAAC,IAAD,CAAT;AAAiB,KADtB,MAEK;AACDA,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH;AACJ,GAND,CArBqB,CA6BvB;AACA;AACA;AACA;AACA;;;AAEA,MAAGnB,eAAe,EAAlB,EAAsB;AACpB,wBACA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEO,QAAC,MAAD;AACG,QAAA,KAAK,EAAC,WADT;AAEG,QAAA,OAAO,EAAC,WAFX;AAGG,QAAA,IAAI,EAAC,QAHR;AAIG,QAAA,OAAO,EAAE,MAAMuB,QAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFP,eAOY,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEC,OAAtB;AAA+B,QAAA,IAAI,EAAEN;AAArC;AAAA;AAAA;AAAA;AAAA,cAPZ,EAQSZ,QAAQ,GAAGA,QAAQ,CAACmB,GAAT,CAAa,CAACD,OAAD,EAAUE,KAAV,kBACzB,QAAC,SAAD;AACE,QAAA,OAAO,EAAElB,OADX;AAEE,QAAA,UAAU,EAAEC,UAFd;AAGc,QAAA,OAAO,EAAEe;AAHvB,SAGOE,KAHP;AAAA;AAAA;AAAA;AAAA,cADY,CAAH,gBAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAgBE,GAjBJ,MAiBU,oBACF;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADE;AAKT,CAzDH;;GAAMrB,U;;KAAAA,U;AA4DN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { createRoutine } from './Routines'\nimport { fetchUsername, getCurrentToken, fetchUserRoutines } from '../api';\nimport MyRoutine from './MyRoutine';\nimport Button from '@material-ui/core/Button';\nimport RoutineForm from './RoutineForm';\n\n\nconst MyRoutines = () => {\n  \n    const [routines, setRoutines] = useState([]);\n    const [creator, setCreator] = useState('');\n    const [routineName, setRoutineName] = useState('');\n    const [routineGoal, setRoutineGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false);\n    const [currentUser, setCurrentUser] = useState('');\n    const [open, setIsOpen] = useState(false);\n\n    useEffect(() => {\n      fetchUsername()\n      .then((data) => setCurrentUser(data.username))\n    })\n\n    useEffect(() => {\n      fetchUserRoutines()\n      .then((data) => setRoutines(data))\n    })\n\n   \n    const showForm = () => {\n        if (open === false){\n             setIsOpen(true);}\n        else {\n            setIsOpen(false)\n        }\n    }\n\n  //  useEffect(() => {\n  //   fetchUserRoutines(currentUser)\n  //   .then((data) => console.log(data))\n  // }, [])\n  //unsure of how to get username inside url parameter???\n\n  if(getCurrentToken()) {\n    return (\n    <div>\n      <h1>My Routines</h1>\n           <Button \n              color=\"secondary\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={() => showForm}>Create A New Routine</Button>\n                <RoutineForm routine={routine} open={open}/>\n            {routines ? routines.map((routine, index) => \n            <MyRoutine \n              creator={creator} \n              setCreator={setCreator} \n              key={index} routine={routine} />) \n              : <h1>Use the form above to start creating routines.</h1>}\n         </div>\n    )} else return (\n          <div className='myRoutines'>\n          <h1>Please register or sign in to see your routines.</h1>\n      </div>\n    )\n  }\n\n\nexport default MyRoutines;"]},"metadata":{},"sourceType":"module"}