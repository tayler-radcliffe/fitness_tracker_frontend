{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/MyRoutines.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { createRoutine } from './Routines';\nimport { fetchUsername, getCurrentToken, fetchUserRoutines } from '../api';\nimport MyRoutine from './MyRoutine';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyRoutines = () => {\n  _s();\n\n  const [routines, setRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [routineName, setRoutineName] = useState('');\n  const [routineGoal, setRoutineGoal] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n  const [currentUser, setCurrentUser] = useState('');\n  useEffect(() => {\n    fetchUsername().then(data => setCurrentUser(data.username));\n  });\n  useEffect(() => {\n    fetchUserRoutines().then(data => setRoutines(data));\n  }); //  useEffect(() => {\n  //   fetchUserRoutines(currentUser)\n  //   .then((data) => console.log(data))\n  // }, [])\n  //unsure of how to get username inside url parameter???\n\n  if (getCurrentToken()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Routines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(MyRoutine, {\n        creator: creator,\n        setCreator: setCreator,\n        routine: routine\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Use the form above to start creating routines.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 102\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myRoutines\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please register or sign in to see your routines.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 11\n  }, this);\n};\n\n_s(MyRoutines, \"LnztFTEGtzAUUxo6W1mSITbta7s=\");\n\n_c = MyRoutines;\n\nconst routineForm = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myRoutines-card\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        createRoutine({\n          routineName,\n          routineGoal,\n          isPublic\n        });\n        alert('Your routine has been created!'); //need to redirect to /myroutines\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Name\",\n        variant: \"outlined\",\n        required: true,\n        onChange: e => setRoutineName(e.target.value),\n        value: routineName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Goal\",\n        variant: \"outlined\",\n        required: true,\n        onChange: e => setRoutineGoal(e.target.value),\n        value: routineGoal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Allow others to see? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        type: \"checkbox\",\n        value: isPublic,\n        color: \"primary\",\n        onClick: () => setIsPublic(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        type: \"submit\",\n        onClick: () => createRoutine,\n        children: \"Create Routine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/MyRoutines.js"],"names":["React","useEffect","useState","createRoutine","fetchUsername","getCurrentToken","fetchUserRoutines","MyRoutine","TextField","Button","Checkbox","MyRoutines","routines","setRoutines","creator","setCreator","routineName","setRoutineName","routineGoal","setRoutineGoal","isPublic","setIsPublic","currentUser","setCurrentUser","then","data","username","map","routine","index","routineForm","e","preventDefault","alert","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { createRoutine } from './Routines'\nimport { fetchUsername, getCurrentToken, fetchUserRoutines } from '../api';\nimport MyRoutine from './MyRoutine';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\n\nconst MyRoutines = () => {\n  \n    const [routines, setRoutines] = useState([]);\n    const [creator, setCreator] = useState('');\n    const [routineName, setRoutineName] = useState('');\n    const [routineGoal, setRoutineGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false);\n    const [currentUser, setCurrentUser] = useState('');\n\n    useEffect(() => {\n      fetchUsername()\n      .then((data) => setCurrentUser(data.username))\n    })\n\n    useEffect(() => {\n      fetchUserRoutines()\n      .then((data) => setRoutines(data))\n    })\n\n   \n\n  //  useEffect(() => {\n  //   fetchUserRoutines(currentUser)\n  //   .then((data) => console.log(data))\n  // }, [])\n  //unsure of how to get username inside url parameter???\n\n    if(getCurrentToken()) {\n    return (\n    <div>\n      <h1>My Routines</h1>\n            {routines ? routines.map((routine, index) => \n            <MyRoutine creator={creator} setCreator={setCreator} key={index} routine={routine} />) : <h1>Use the form above to start creating routines.</h1>}\n         </div>\n    )} else return (\n          <div className='myRoutines'>\n          <h1>Please register or sign in to see your routines.</h1>\n      </div>\n    )\n  }\n\nconst routineForm = () => {\n  return (\n    <div className='myRoutines-card'>\n      \n      <form onSubmit={e => {\n        e.preventDefault();\n        createRoutine({routineName, routineGoal, isPublic});\n        alert('Your routine has been created!');\n          //need to redirect to /myroutines\n      }} >\n      <TextField \n        id=\"outlined-basic\" \n        label=\"Name\" \n        variant=\"outlined\" \n        required onChange={(e) => setRoutineName(e.target.value)} \n        value={routineName}/>\n      <TextField \n        id=\"outlined-basic\" \n        label=\"Goal\" \n        variant=\"outlined\" \n        required onChange={(e) => setRoutineGoal(e.target.value)} \n        value={routineGoal}/>\n        \n      <label>Allow others to see? </label>\n        <Checkbox \n          type='checkbox' \n          value={isPublic}\n          color='primary' \n          onClick={() => setIsPublic(true)} />\n\n        <Button \n          color='primary'\n          variant=\"contained\"\n          type='submit'\n          onClick={() => createRoutine}>Create Routine</Button>\n        </form>\n    </div>\n    \n  )\n}\n\n\nexport default MyRoutines;"]},"metadata":{},"sourceType":"module"}