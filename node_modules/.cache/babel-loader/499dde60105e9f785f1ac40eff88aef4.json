{"ast":null,"code":"export function storeLoginToken(token) {\n  localStorage.setItem('token', JSON.stringify(token));\n}\nexport function getCurrentToken() {\n  const token = JSON.parse(localStorage.getItem('token'));\n  return token;\n}\ntoken ? JSON.parse(localStorage.getItem('token')) : '';\nexport function clearCurrentToken() {\n  localStorage.removeItem('token');\n}\nexport const fetchRoutines = async () => {\n  const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/routines', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n};\nexport const fetchUserRoutines = async user => {\n  try {\n    const response = await fetch(`https://fitnesstrac-kr.herokuapp.com/api/users/taylerann/routines`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchActivities = async () => {\n  const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/activities', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n};\nexport const fetchUsername = async () => {\n  const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const createRoutine = async ({\n  routineName,\n  routineGoal,\n  isPublic\n}) => {\n  await fetch('https://fitnesstrac-kr.herokuapp.com/api/routines', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      name: routineName,\n      goal: routineGoal,\n      isPublic: isPublic\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n};","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/api/index.js"],"names":["storeLoginToken","token","localStorage","setItem","JSON","stringify","getCurrentToken","parse","getItem","clearCurrentToken","removeItem","fetchRoutines","response","fetch","headers","data","json","fetchUserRoutines","user","error","fetchActivities","fetchUsername","console","log","createRoutine","routineName","routineGoal","isPublic","method","body","name","goal","then","result","catch"],"mappings":"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","sourcesContent":["export function storeLoginToken(token) {\n    localStorage.setItem('token', JSON.stringify(token));\n  }\n  \n  export function getCurrentToken() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    return token;\n  }\n\n  token ? JSON.parse(localStorage.getItem('token')) : '';\n  \n  export function clearCurrentToken() {\n    localStorage.removeItem('token');\n  }\n\n\nexport const fetchRoutines = async () => {\n  const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/routines', {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  const data = await response.json();\n\n  return data;\n}\n\nexport const fetchUserRoutines = async (user) => {\n  try{\n     const response = await fetch(`https://fitnesstrac-kr.herokuapp.com/api/users/taylerann/routines`, {\n       headers: {\n         'Content-Type': 'application/json',\n         'Authorization': `Bearer ${token}`\n         },\n     });\n     const data = await response.json();\n     return data;\n } catch (error) {\n   throw error;\n }\n}\n\n\nexport const fetchActivities = async () => {\n  const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/activities', {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  const data = await response.json();\n\n  return data;\n}\n\n\nexport const fetchUsername = async () => {\n    const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/users/me', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n    })\n    const data = await response.json();\n    console.log(data);\n\n    return data;\n}\n\n\n\nexport const createRoutine = async ({routineName, routineGoal, isPublic}) => {\n  await fetch('https://fitnesstrac-kr.herokuapp.com/api/routines', {\n      method: \"POST\",\n      headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n      body: JSON.stringify({\n          name: routineName,\n          goal: routineGoal,\n          isPublic: isPublic\n    })\n  }).then(response => response.json())\n  .then(result => {\n      console.log(result);\n  })\n  .catch(console.error);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}