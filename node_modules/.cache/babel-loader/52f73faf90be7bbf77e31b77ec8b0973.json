{"ast":null,"code":"import { ControlCameraOutlined } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nexport function storeLoginToken(token) {\n  localStorage.setItem('token', JSON.stringify(token));\n}\nexport function getCurrentToken() {\n  const token = JSON.parse(localStorage.getItem('token'));\n  return token;\n}\nexport function clearCurrentToken() {\n  localStorage.removeItem('token');\n}\nexport const fetchRoutines = async () => {\n  const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/routines', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n};\nexport const fetchActivites = async () => {\n  const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/activities', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n};\nexport const fetchUsername = async () => {\n  const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getCurrentToken()}`\n    }\n  });\n  const data = await response.json();\n  return data;\n};\nexport async function fetchUserRoutines(username) {\n  try {\n    const response = await fetch(`http://fitnesstrac-kr.herokuapp.com/api/users/${username}/routines`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${getCurrentToken()}`\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\nexport const createRoutine = async ({\n  routineName,\n  routineGoal,\n  isPublic\n}) => {\n  await fetch('http://fitnesstrac-kr.herokuapp.com/api/routines', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getCurrentToken()}`\n    },\n    body: JSON.stringify({\n      name: routineName,\n      goal: routineGoal,\n      isPublic: isPublic\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n};","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/api/index.js"],"names":["ControlCameraOutlined","useState","storeLoginToken","token","localStorage","setItem","JSON","stringify","getCurrentToken","parse","getItem","clearCurrentToken","removeItem","fetchRoutines","response","fetch","headers","data","json","fetchActivites","fetchUsername","fetchUserRoutines","username","error","createRoutine","routineName","routineGoal","isPublic","method","body","name","goal","then","result","console","log","catch"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,oBAAtC;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AACnCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAA9B;AACD;AAED,OAAO,SAASK,eAAT,GAA2B;AAChC,QAAML,KAAK,GAAGG,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAX,CAAd;AACA,SAAOP,KAAP;AACD;AAED,OAAO,SAASQ,iBAAT,GAA6B;AAClCP,EAAAA,YAAY,CAACQ,UAAb,CAAwB,OAAxB;AACD;AAGH,OAAO,MAAMC,aAAa,GAAG,YAAY;AACvC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAD,EAAqD;AAC/EC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADsE,GAArD,CAA5B;AAKA,QAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AAEA,SAAOD,IAAP;AACD,CATM;AAYP,OAAO,MAAME,cAAc,GAAG,YAAY;AACxC,QAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAD,EAAuD;AACjFC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADwE,GAAvD,CAA5B;AAKA,QAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AAEA,SAAOD,IAAP;AACD,CATM;AAYP,OAAO,MAAMG,aAAa,GAAG,YAAY;AACrC,QAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAD,EAAqD;AAC/EC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAkB,UAASR,eAAe,EAAG;AAFtC;AADsE,GAArD,CAA5B;AAMA,QAAMS,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AAEA,SAAOD,IAAP;AACH,CAVM;AAaP,OAAO,eAAeI,iBAAf,CAAiCC,QAAjC,EAA2C;AAC/C,MAAG;AACA,UAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,iDAAgDO,QAAS,WAA3D,EAAuE;AACjGN,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAkB,UAASR,eAAe,EAAG;AAFtC;AADwF,KAAvE,CAA5B;AAMA,UAAMS,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACA,WAAOD,IAAP;AACH,GATA,CASC,OAAOM,KAAP,EAAc;AACd,UAAMA,KAAN;AACD;AACF;AAGD,OAAO,MAAMC,aAAa,GAAG,OAAO;AAACC,EAAAA,WAAD;AAAcC,EAAAA,WAAd;AAA2BC,EAAAA;AAA3B,CAAP,KAAgD;AAC3E,QAAMZ,KAAK,CAAC,kDAAD,EAAqD;AAC5Da,IAAAA,MAAM,EAAE,MADoD;AAE5DZ,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,uBAAkB,UAASR,eAAe,EAAG;AAFxC,KAFmD;AAM5DqB,IAAAA,IAAI,EAAEvB,IAAI,CAACC,SAAL,CAAe;AACjBuB,MAAAA,IAAI,EAAEL,WADW;AAEjBM,MAAAA,IAAI,EAAEL,WAFW;AAGjBC,MAAAA,QAAQ,EAAEA;AAHO,KAAf;AANsD,GAArD,CAAL,CAWHK,IAXG,CAWElB,QAAQ,IAAIA,QAAQ,CAACI,IAAT,EAXd,EAYLc,IAZK,CAYAC,MAAM,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,GAdK,EAeLG,KAfK,CAeCF,OAAO,CAACX,KAfT,CAAN;AAgBD,CAjBM","sourcesContent":["import { ControlCameraOutlined } from \"@material-ui/icons\";\nimport { useState } from \"react\";\n\nexport function storeLoginToken(token) {\n    localStorage.setItem('token', JSON.stringify(token));\n  }\n  \n  export function getCurrentToken() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    return token;\n  }\n  \n  export function clearCurrentToken() {\n    localStorage.removeItem('token');\n  }\n\n\nexport const fetchRoutines = async () => {\n  const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/routines', {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  const data = await response.json();\n\n  return data;\n}\n\n\nexport const fetchActivites = async () => {\n  const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/activities', {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  const data = await response.json();\n\n  return data;\n}\n\n\nexport const fetchUsername = async () => {\n    const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/users/me', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${getCurrentToken()}`\n      },\n    })\n    const data = await response.json();\n\n    return data;\n}\n\n\nexport async function fetchUserRoutines(username) {\n   try{\n      const response = await fetch(`http://fitnesstrac-kr.herokuapp.com/api/users/${username}/routines`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${getCurrentToken()}`\n          },\n      });\n      const data = await response.json();\n      return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\n\nexport const createRoutine = async ({routineName, routineGoal, isPublic}) => {\n  await fetch('http://fitnesstrac-kr.herokuapp.com/api/routines', {\n      method: \"POST\",\n      headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${getCurrentToken()}`\n        },\n      body: JSON.stringify({\n          name: routineName,\n          goal: routineGoal,\n          isPublic: isPublic\n    })\n  }).then(response => response.json())\n  .then(result => {\n      console.log(result);\n  })\n  .catch(console.error);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}