{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { fetchUserRoutines, getCurrentToken, storeLoginToken } from '../api';\nimport '../components/register.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = ({\n  currentUser,\n  setCurrentUser,\n  username,\n  password,\n  confirmedPassword,\n  setUsername,\n  setPassword,\n  setConfirmedPassword,\n  setMyRoutines\n}) => {\n  _s();\n\n  const [token, setToken] = useState('');\n  const history = useHistory();\n\n  const registerUser = async (username, password) => {\n    if (password !== confirmedPassword) {\n      swal('Oops!', 'Passwords must match.', 'error');\n    } else {\n      await fetch('https://fitnesstrac-kr.herokuapp.com/api/users/register', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n\n        if (result.error) {\n          swal({\n            title: \"Oops\",\n            text: result.message,\n            icon: \"error\"\n          });\n          ;\n          setUsername('');\n          setPassword('');\n          setConfirmedPassword('');\n        } else {\n          console.log('This is your login token', result.token);\n          setToken(result.token);\n          storeLoginToken(result.token);\n          setUsername('');\n          setPassword('');\n          setConfirmedPassword('');\n          swal({\n            title: \"Welcome\",\n            text: \"Account created successfully!\",\n            icon: \"success\",\n            button: false,\n            timer: 2000\n          });\n          history.push('/myroutines');\n        }\n      }).catch(console.error);\n    }\n  };\n\n  const handleClick = async event => {\n    event.preventDefault();\n    registerUser(username, password);\n    setCurrentUser(username);\n    const newRoutines = await fetchUserRoutines(currentUser);\n    setMyRoutines(newRoutines);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '250px',\n      margin: theme.spacing(2),\n      marginTop: '5px'\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create an Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          type: \"text\",\n          value: username,\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Username\",\n          min: \"8\",\n          max: \"20\",\n          required: true,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          type: \"password\",\n          value: password,\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Password\",\n          minLength: \"7\",\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          type: \"password\",\n          value: confirmedPassword,\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Confirm Password\",\n          minLength: \"7\",\n          required: true,\n          onChange: e => setConfirmedPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            type: \"submit\",\n            color: \"primary\",\n            variant: \"contained\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"register-link\",\n          children: \"Already have an account? Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"KQp05Bg6I8HbxohqSHxtROFzGrk=\", true, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/Register.js"],"names":["React","useState","Redirect","Link","fetchUserRoutines","getCurrentToken","storeLoginToken","FormControl","makeStyles","Button","OutlinedInput","TextField","useHistory","Register","currentUser","setCurrentUser","username","password","confirmedPassword","setUsername","setPassword","setConfirmedPassword","setMyRoutines","token","setToken","history","registerUser","swal","fetch","method","headers","body","JSON","stringify","then","response","json","result","console","log","error","title","text","message","icon","button","timer","push","catch","handleClick","event","preventDefault","newRoutines","useStyles","theme","container","display","flexWrap","formControl","margin","spacing","minWidth","textFields","width","marginTop","classes","shrink","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { fetchUserRoutines, getCurrentToken, storeLoginToken } from '../api';\nimport '../components/register.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\nconst Register = ({ currentUser, setCurrentUser, username, password, confirmedPassword, setUsername, setPassword, setConfirmedPassword, setMyRoutines }) => {\n\n  const [token, setToken] = useState('');\n\n  const history = useHistory();\n\n  const registerUser = async (username, password) => {\n    if (password !== confirmedPassword) {\n      swal('Oops!', 'Passwords must match.', 'error')\n    } else {\n      await fetch('https://fitnesstrac-kr.herokuapp.com/api/users/register', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      }).then(response => response.json())\n        .then(result => {\n          console.log(result);\n          if (result.error) {\n            swal({\n              title: \"Oops\",\n              text: result.message,\n              icon: \"error\"});;\n            setUsername('');\n            setPassword('');\n            setConfirmedPassword('');\n          } else {\n            console.log('This is your login token', result.token)\n            setToken(result.token);\n            storeLoginToken(result.token);\n            setUsername('');\n            setPassword('');\n            setConfirmedPassword('');\n            swal({\n              title: \"Welcome\",\n              text: \"Account created successfully!\",\n              icon: \"success\",\n              button: false,\n              timer: 2000});\n            history.push('/myroutines')\n          }\n        })\n        .catch(console.error);\n    }\n  };\n\n\n  const handleClick = async (event) => {\n    event.preventDefault();\n    registerUser(username, password);\n    setCurrentUser(username);\n    const newRoutines = await fetchUserRoutines(currentUser);\n    setMyRoutines(newRoutines);\n  };\n\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '250px',\n      margin: theme.spacing(2),\n      marginTop: '5px'\n    },\n  }));\n\n  const classes = useStyles();\n\n\n  return (\n    <div className=\"register-container\">\n      <form className=\"register-form\" onSubmit={handleClick}>\n        <h2>Create an Account</h2>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n\n          <TextField className={classes.textFields}\n            type='text'\n            value={username}\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            label='Username'\n            min='8' max='20' required\n            onChange={(e) => setUsername(e.target.value)}\n          />\n\n          <TextField className={classes.textFields}\n            type='password'\n            value={password}\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            label='Password'\n            minLength=\"7\"\n            required\n            onChange={(e) => setPassword(e.target.value)}\n          />\n\n          <TextField className={classes.textFields}\n            type='password'\n            value={confirmedPassword}\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            label='Confirm Password'\n            minLength=\"7\"\n            required\n            onChange={(e) => setConfirmedPassword(e.target.value)}\n          />\n          <div className=\"register-button\">\n            <Button\n              size='large'\n              type='submit'\n              color='primary'\n              variant=\"contained\"\n            >Register</Button>\n\n          </div>\n\n          <Link to=\"/login\" className=\"register-link\">\n            Already have an account? Sign in\n                </Link>\n        </FormControl>\n      </form>\n    </div>\n  )\n}\n\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}