{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/ActivityForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { getCurrentToken } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActivityForm = ({\n  activity,\n  open\n}) => {\n  _s();\n\n  const [count, setCount] = useState('');\n  const [duration, setDuration] = useState('');\n  const activityId = activity.routineActivityId;\n\n  const updateActivity = async ({\n    count,\n    duration\n  }) => {\n    await fetch(`http://fitnesstrac-kr.herokuapp.com/api/routine_activities/${activityId}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${getCurrentToken()}`\n      },\n      body: JSON.stringify({\n        count: count,\n        duration: duration\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n    }).catch(console.error);\n  };\n\n  if (open === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          updateActivity({\n            count,\n            duration\n          });\n          alert('Activity has been updated.'); //redirect/refresh page without refreshing\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Update Duration\",\n          onChange: e => setDuration(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Update Count\",\n          onChange: e => setCount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 17\n  }, this);\n};\n\n_s(ActivityForm, \"0W+0L1qpfA+1g5Pf+IyhmSt+Hhk=\");\n\n_c = ActivityForm;\nexport default ActivityForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityForm\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/ActivityForm.js"],"names":["React","useState","getCurrentToken","ActivityForm","activity","open","count","setCount","duration","setDuration","activityId","routineActivityId","updateActivity","fetch","method","headers","body","JSON","stringify","then","response","json","result","console","log","catch","error","e","preventDefault","alert","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,QAAhC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAsB;AAAA;;AAEvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAEJ,QAAMS,UAAU,GAAGN,QAAQ,CAACO,iBAA5B;;AAGA,QAAMC,cAAc,GAAG,OAAO;AAACN,IAAAA,KAAD;AAAQE,IAAAA;AAAR,GAAP,KAA6B;AAChD,UAAMK,KAAK,CAAE,8DAA6DH,UAAW,EAA1E,EAA6E;AACpFI,MAAAA,MAAM,EAAE,OAD4E;AAEpFC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,UAASb,eAAe,EAAG;AAFxC,OAF2E;AAMpFc,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBZ,QAAAA,KAAK,EAAEA,KADU;AAEjBE,QAAAA,QAAQ,EAAEA;AAFO,OAAf;AAN8E,KAA7E,CAAL,CAUHW,IAVG,CAUEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAVd,EAWLF,IAXK,CAWAG,MAAM,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,KAbK,EAcLG,KAdK,CAcCF,OAAO,CAACG,KAdT,CAAN;AAeC,GAhBL;;AAmBA,MAAGrB,IAAI,KAAK,IAAZ,EAAkB;AACd,wBACI;AAAA,6BACA;AAAM,QAAA,QAAQ,EAAEsB,CAAC,IAAI;AACjBA,UAAAA,CAAC,CAACC,cAAF;AACAhB,UAAAA,cAAc,CAAC;AAACN,YAAAA,KAAD;AAAQE,YAAAA;AAAR,WAAD,CAAd;AACAqB,UAAAA,KAAK,CAAC,4BAAD,CAAL,CAHiB,CAIjB;AAEF,SANF;AAAA,gCAOI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,iBAA/B;AAAiD,UAAA,QAAQ,EAAGF,CAAD,IAAOlB,WAAW,CAACkB,CAAC,CAACG,MAAF,CAASC,KAAV;AAA7E;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,cAA/B;AAA8C,UAAA,QAAQ,EAAGJ,CAAD,IAAOpB,QAAQ,CAACoB,CAAC,CAACG,MAAF,CAASC,KAAV;AAAvE;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcE,GAfN,MAgBS,oBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACR,CA5CD;;GAAM5B,Y;;KAAAA,Y;AA8CN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { getCurrentToken } from '../api';\n\nconst ActivityForm = ({activity, open}) => {\n\n    const [count, setCount] = useState('');\n    const [duration, setDuration] = useState('');\n\nconst activityId = activity.routineActivityId;\n\n\nconst updateActivity = async ({count, duration}) => {\n    await fetch(`http://fitnesstrac-kr.herokuapp.com/api/routine_activities/${activityId}`, {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${getCurrentToken()}`\n          },\n        body: JSON.stringify({\n            count: count,\n            duration: duration\n        })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n    })\n    .catch(console.error);\n    }\n\n\nif(open === true) {\n    return (\n        <div>\n        <form onSubmit={e => {\n            e.preventDefault();\n            updateActivity({count, duration});\n            alert('Activity has been updated.');\n            //redirect/refresh page without refreshing\n\n         }}>\n            <input type='text' placeholder='Update Duration' onChange={(e) => setDuration(e.target.value)}></input>\n            <input type='text' placeholder='Update Count' onChange={(e) => setCount(e.target.value)}></input>\n            <input type='submit'></input>\n        </form>\n        </div>\n    )}\n    else return <div></div>;\n}\n\nexport default ActivityForm;"]},"metadata":{},"sourceType":"module"}