{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/MyRoutines.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { createRoutine } from './Routines';\nimport { fetchUsername, getCurrentToken, fetchUserRoutines } from '../api';\nimport MyRoutine from './MyRoutine';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyRoutines = () => {\n  _s();\n\n  const [routines, setRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [routineName, setRoutineName] = useState('');\n  const [routineGoal, setRoutineGoal] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n  const [currentUser, setCurrentUser] = useState('');\n  useEffect(() => {\n    fetchUsername().then(data => setCurrentUser(data.username));\n  });\n  useEffect(() => {\n    fetchUserRoutines().then(data => setRoutines(data));\n  }); //  useEffect(() => {\n  //   fetchUserRoutines(currentUser)\n  //   .then((data) => console.log(data))\n  // }, [])\n  //unsure of how to get username inside url parameter???\n\n  if (getCurrentToken()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myRoutines-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Routines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          createRoutine({\n            routineName,\n            routineGoal,\n            isPublic\n          });\n          alert('Your routine has been created!'); //need to redirect to /myroutines\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Name\",\n          variant: \"outlined\",\n          required: true,\n          onChange: e => setRoutineName(e.target.value),\n          value: routineName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Goal\",\n          variant: \"outlined\",\n          required: true,\n          onChange: e => setRoutineGoal(e.target.value),\n          value: routineGoal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Allow others to see? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: isPublic,\n          onClick: () => setIsPublic(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          type: \"submit\",\n          children: \"Create Routine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(MyRoutine, {\n        creator: creator,\n        setCreator: setCreator,\n        routine: routine\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Use the form above to start creating routines.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 102\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myRoutines\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please register or sign in to see your routines.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 11\n  }, this);\n};\n\n_s(MyRoutines, \"LnztFTEGtzAUUxo6W1mSITbta7s=\");\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/MyRoutines.js"],"names":["React","useEffect","useState","createRoutine","fetchUsername","getCurrentToken","fetchUserRoutines","MyRoutine","TextField","Button","MyRoutines","routines","setRoutines","creator","setCreator","routineName","setRoutineName","routineGoal","setRoutineGoal","isPublic","setIsPublic","currentUser","setCurrentUser","then","data","username","e","preventDefault","alert","target","value","map","routine","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { createRoutine } from './Routines'\nimport { fetchUsername, getCurrentToken, fetchUserRoutines } from '../api';\nimport MyRoutine from './MyRoutine';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\n\nconst MyRoutines = () => {\n  \n    const [routines, setRoutines] = useState([]);\n    const [creator, setCreator] = useState('');\n    const [routineName, setRoutineName] = useState('');\n    const [routineGoal, setRoutineGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false);\n    const [currentUser, setCurrentUser] = useState('');\n\n    useEffect(() => {\n      fetchUsername()\n      .then((data) => setCurrentUser(data.username))\n    })\n\n    useEffect(() => {\n      fetchUserRoutines()\n      .then((data) => setRoutines(data))\n    })\n\n   \n\n  //  useEffect(() => {\n  //   fetchUserRoutines(currentUser)\n  //   .then((data) => console.log(data))\n  // }, [])\n  //unsure of how to get username inside url parameter???\n\n    if(getCurrentToken()) {\n    return (\n        <div className='myRoutines-card'>\n            <h1>My Routines</h1>\n            <form onSubmit={e => {\n              e.preventDefault();\n              createRoutine({routineName, routineGoal, isPublic});\n              alert('Your routine has been created!');\n                //need to redirect to /myroutines\n            }} >\n            <TextField \n              id=\"outlined-basic\" \n              label=\"Name\" \n              variant=\"outlined\" \n              required onChange={(e) => setRoutineName(e.target.value)} \n              value={routineName}/>\n            <TextField \n              id=\"outlined-basic\" \n              label=\"Goal\" \n              variant=\"outlined\" \n              required onChange={(e) => setRoutineGoal(e.target.value)} \n              value={routineGoal}/>\n              \n            <label>Allow others to see? </label>\n              <input type='checkbox' value={isPublic} onClick={() => setIsPublic(true)} >\n                </input>\n              <Button \n                color='primary'\n                variant=\"contained\"\n                type='submit'>Create Routine</Button>\n            </form>\n            {routines ? routines.map((routine, index) => \n            <MyRoutine creator={creator} setCreator={setCreator} key={index} routine={routine} />) : <h1>Use the form above to start creating routines.</h1>}\n         </div>\n    )} else return (\n          <div className='myRoutines'>\n          <h1>Please register or sign in to see your routines.</h1>\n      </div>\n    )\n  }\n\n\n\n\nexport default MyRoutines;"]},"metadata":{},"sourceType":"module"}