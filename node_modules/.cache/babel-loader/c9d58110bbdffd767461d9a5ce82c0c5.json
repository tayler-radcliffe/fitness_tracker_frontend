{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/UpdateRoutineForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { getCurrentToken } from '../api';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createActivity } from './Activities';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateRoutineForm = ({\n  routineOpen,\n  routine\n}) => {\n  _s();\n\n  const [routineName, setRoutineName] = useState('');\n  const [routineGoal, setRoutineGoal] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n\n  const updateRoutine = ({\n    routineName,\n    routineGoal,\n    isPublic\n  }) => {\n    fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines/${routine.id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${getCurrentToken()}`\n      },\n      body: JSON.stringify({\n        name: routineName,\n        goal: routineGoal,\n        isPublic: isPublic\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n    }).catch(console.error);\n  };\n\n  if (routineOpen === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"updateRoutineForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          updateRoutine({\n            routineName,\n            routineGoal\n          });\n          alert('Your routine has been updated!'); //redirect/ refresh on click\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setRoutineName(e.target.value),\n          value: routineName,\n          size: \"small\",\n          variant: \"outlined\",\n          label: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setRoutineGoal(e.target.value),\n          label: \"Goal\",\n          value: routineGoal,\n          size: \"small\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Allow others to see? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: isPublic,\n          type: \"checkbox\",\n          color: \"primary\",\n          onClick: () => {\n            if (isPublic === false) {\n              setIsPublic(true);\n            } else setIsPublic(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Update Routine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 17\n  }, this);\n};\n\n_s(UpdateRoutineForm, \"QSM9LDHg58Df2IszYbZ2OkKF7q4=\");\n\n_c = UpdateRoutineForm;\nexport default UpdateRoutineForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateRoutineForm\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/UpdateRoutineForm.js"],"names":["React","useState","getCurrentToken","Button","TextField","FormControl","makeStyles","createActivity","Checkbox","UpdateRoutineForm","routineOpen","routine","routineName","setRoutineName","routineGoal","setRoutineGoal","isPublic","setIsPublic","updateRoutine","fetch","id","method","headers","body","JSON","stringify","name","goal","then","response","json","result","console","log","catch","error","e","preventDefault","alert","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,QAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,QAAP,MAAqB,4BAArB;;;AAGA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAD,KAA4B;AAAA;;AAElD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMiB,aAAa,GAAG,CAAC;AAACN,IAAAA,WAAD;AAAcE,IAAAA,WAAd;AAA2BE,IAAAA;AAA3B,GAAD,KAA0C;AAC5DG,IAAAA,KAAK,CAAE,oDAAmDR,OAAO,CAACS,EAAG,EAAhE,EAAmE;AACpEC,MAAAA,MAAM,EAAE,OAD4D;AAEpEC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,UAASpB,eAAe,EAAG;AAFxC,OAF2D;AAMpEqB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,IAAI,EAAEd,WADW;AAEjBe,QAAAA,IAAI,EAAEb,WAFW;AAGjBE,QAAAA,QAAQ,EAAEA;AAHO,OAAf;AAN8D,KAAnE,CAAL,CAWOY,IAXP,CAWYC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAXxB,EAYKF,IAZL,CAYUG,MAAM,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,KAdL,EAeKG,KAfL,CAeWF,OAAO,CAACG,KAfnB;AAgBH,GAjBD;;AAqBJ,MAAGzB,WAAW,KAAK,IAAnB,EAAyB;AACrB,wBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAE0B,CAAC,IAAI;AACnBA,UAAAA,CAAC,CAACC,cAAF;AACAnB,UAAAA,aAAa,CAAC;AAACN,YAAAA,WAAD;AAAcE,YAAAA;AAAd,WAAD,CAAb;AACAwB,UAAAA,KAAK,CAAC,gCAAD,CAAL,CAHmB,CAInB;AAED,SAND;AAAA,gCAOE,QAAC,SAAD;AACA,UAAA,QAAQ,EAAGF,CAAD,IAAOvB,cAAc,CAACuB,CAAC,CAACG,MAAF,CAASC,KAAV,CAD/B;AAEA,UAAA,KAAK,EAAE5B,WAFP;AAGA,UAAA,IAAI,EAAC,OAHL;AAIA,UAAA,OAAO,EAAC,UAJR;AAKA,UAAA,KAAK,EAAC;AALN;AAAA;AAAA;AAAA;AAAA,gBAPF,eAcE,QAAC,SAAD;AACA,UAAA,QAAQ,EAAGwB,CAAD,IAAOrB,cAAc,CAACqB,CAAC,CAACG,MAAF,CAASC,KAAV,CAD/B;AAEA,UAAA,KAAK,EAAC,MAFN;AAGA,UAAA,KAAK,EAAE1B,WAHP;AAIA,UAAA,IAAI,EAAC,OAJL;AAKC,UAAA,OAAO,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,gBAdF,eAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBA,eAsBE,QAAC,QAAD;AACA,UAAA,KAAK,EAAEE,QADP;AAEC,UAAA,IAAI,EAAC,UAFN;AAGC,UAAA,KAAK,EAAC,SAHP;AAGiB,UAAA,OAAO,EAAE,MAAM;AAC5B,gBAAGA,QAAQ,KAAK,KAAhB,EAAsB;AAClBC,cAAAA,WAAW,CAAC,IAAD,CAAX;AAAkB,aADtB,MAGIA,WAAW,CAAC,KAAD,CAAX;AAAmB;AAP3B;AAAA;AAAA;AAAA;AAAA,gBAtBF,eA8BE,QAAC,MAAD;AACA,UAAA,IAAI,EAAC,QADL;AAEA,UAAA,KAAK,EAAC,SAFN;AAGA,UAAA,OAAO,EAAC,WAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAuCE,GAxCN,MAyCS,oBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACR,CArED;;GAAMR,iB;;KAAAA,iB;AAwEN,eAAeA,iBAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { getCurrentToken } from '../api'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createActivity } from './Activities';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nconst UpdateRoutineForm = ({routineOpen, routine}) => {\n\n    const [routineName, setRoutineName] = useState('');\n    const [routineGoal, setRoutineGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false);\n\n    const updateRoutine = ({routineName, routineGoal, isPublic}) => {\n        fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines/${routine.id}`, {\n            method: \"PATCH\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${getCurrentToken()}`\n              },\n            body: JSON.stringify({\n                name: routineName,\n                goal: routineGoal,\n                isPublic: isPublic\n            })\n            }).then(response => response.json())\n            .then(result => {\n                console.log(result);\n            })\n            .catch(console.error);\n    }\n\n    \n\nif(routineOpen === true) {\n    return (\n        <div className='updateRoutineForm'>\n            <form onSubmit={e => {\n              e.preventDefault();\n              updateRoutine({routineName, routineGoal});\n              alert('Your routine has been updated!');\n              //redirect/ refresh on click\n\n            }} >\n              <TextField \n              onChange={(e) => setRoutineName(e.target.value)} \n              value={routineName} \n              size='small'\n              variant=\"outlined\"\n              label='Name' \n              />\n              <TextField \n              onChange={(e) => setRoutineGoal(e.target.value)} \n              label='Goal'\n              value={routineGoal} \n              size='small'\n               variant=\"outlined\" />\n          \n            <label>Allow others to see? </label>\n              <Checkbox \n              value={isPublic} \n               type='checkbox'\n               color='primary' onClick={() => {\n                  if(isPublic === false){\n                      setIsPublic(true)}\n                      else \n                      setIsPublic(false)}} />\n              <Button\n              type='submit'\n              color='primary'\n              variant='contained'>Update Routine</Button>\n \n            </form>\n         </div>\n    )} \n    else return <div></div>;\n}\n\n\nexport default UpdateRoutineForm;"]},"metadata":{},"sourceType":"module"}