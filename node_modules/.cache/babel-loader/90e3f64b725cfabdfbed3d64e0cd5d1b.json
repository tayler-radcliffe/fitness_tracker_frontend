{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/Routines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchRoutines, getCurrentToken, createRoutine } from '../api';\nimport Routine from './Routine';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Routines = () => {\n  _s();\n\n  const [routines, setRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [routineName, setRoutineName] = useState('');\n  const [routineGoal, setRoutineGoal] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n  useEffect(() => {\n    fetchRoutines().then(data => setRoutines(data));\n    console.log(routines);\n  }, []);\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '350px',\n      margin: theme.spacing(2)\n    }\n  }));\n  const classes = useStyles();\n\n  if (getCurrentToken()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"publicRoutines\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fitness Routines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"routineform\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.container,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              createRoutine({\n                routineName,\n                routineGoal,\n                isPublic\n              });\n              alert('Your routine has been created!'); //need to redirect to /myroutines\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Name\",\n              variant: \"outlined\",\n              size: \"small\",\n              required: true,\n              onChange: e => setRoutineName(e.target.value),\n              value: routineName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Goal\",\n              size: \"small\",\n              variant: \"outlined\",\n              required: true,\n              onChange: e => setRoutineGoal(e.target.value),\n              value: routineGoal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              children: \"Allow others to see? \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n              type: \"checkbox\",\n              size: \"small\",\n              value: isPublic,\n              color: \"primary\",\n              onClick: setIsPublic(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              type: \"submit\",\n              onClick: createRoutine,\n              children: \"Create Routine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(Routine, {\n          creator: creator,\n          setCreator: setCreator,\n          routine: routine\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"publicRoutines\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fitness Routines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(Routine, {\n      creator: creator,\n      setCreator: setCreator,\n      routine: routine\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Routines, \"3ontoAb4uMKi48Si1CnFXDPZgEE=\", true);\n\n_c = Routines;\nexport default Routines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routines\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/Routines.js"],"names":["React","useEffect","useState","fetchRoutines","getCurrentToken","createRoutine","Routine","Button","TextField","Checkbox","FormControl","makeStyles","Routines","routines","setRoutines","creator","setCreator","routineName","setRoutineName","routineGoal","setRoutineGoal","isPublic","setIsPublic","then","data","console","log","useStyles","theme","container","display","flexWrap","formControl","margin","spacing","minWidth","textFields","width","classes","e","preventDefault","alert","target","value","map","routine","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,aAAzC,QAA8D,QAA9D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,aAAa,GACZoB,IADD,CACOC,IAAD,IAAUV,WAAW,CAACU,IAAD,CAD3B;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACH,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMc,SAAS,GAAGhB,UAAU,CAAEiB,KAAD,KAAY;AACvCC,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE,MADA;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAD4B;AAKvCC,IAAAA,WAAW,EAAE;AACXC,MAAAA,MAAM,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADG;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAL0B;AASvCC,IAAAA,UAAU,EAAE;AACRC,MAAAA,KAAK,EAAE,OADC;AAERJ,MAAAA,MAAM,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AAFA;AAT2B,GAAZ,CAAD,CAA5B;AAeA,QAAMI,OAAO,GAAGX,SAAS,EAAzB;;AAGA,MAAGvB,eAAe,EAAlB,EAAsB;AACtB,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACN,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEkC,OAAO,CAACT,SAAhC;AAAA,iCACE;AAAM,YAAA,QAAQ,EAAEU,CAAC,IAAI;AACnBA,cAAAA,CAAC,CAACC,cAAF;AACAnC,cAAAA,aAAa,CAAC;AAACY,gBAAAA,WAAD;AAAcE,gBAAAA,WAAd;AAA2BE,gBAAAA;AAA3B,eAAD,CAAb;AACAoB,cAAAA,KAAK,CAAC,gCAAD,CAAL,CAHmB,CAIjB;AACH,aALD;AAAA,oCAMA,QAAC,SAAD;AACE,cAAA,EAAE,EAAC,gBADL;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,OAAO,EAAC,UAHV;AAIE,cAAA,IAAI,EAAC,OAJP;AAKE,cAAA,QAAQ,MALV;AAKW,cAAA,QAAQ,EAAGF,CAAD,IAAOrB,cAAc,CAACqB,CAAC,CAACG,MAAF,CAASC,KAAV,CAL1C;AAME,cAAA,KAAK,EAAE1B;AANT;AAAA;AAAA;AAAA;AAAA,oBANA,eAaA,QAAC,SAAD;AACE,cAAA,EAAE,EAAC,gBADL;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,IAAI,EAAC,OAHP;AAIE,cAAA,OAAO,EAAC,UAJV;AAKE,cAAA,QAAQ,MALV;AAKW,cAAA,QAAQ,EAAGsB,CAAD,IAAOnB,cAAc,CAACmB,CAAC,CAACG,MAAF,CAASC,KAAV,CAL1C;AAME,cAAA,KAAK,EAAExB;AANT;AAAA;AAAA;AAAA;AAAA,oBAbA,eAqBA;AAAO,cAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBA,eAsBE,QAAC,QAAD;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,KAAK,EAAEE,QAHT;AAIE,cAAA,KAAK,EAAC,SAJR;AAKE,cAAA,OAAO,EAAEC,WAAW,CAAC,IAAD;AALtB;AAAA;AAAA;AAAA;AAAA,oBAtBF,eA6BE,QAAC,MAAD;AACE,cAAA,KAAK,EAAC,SADR;AAEE,cAAA,OAAO,EAAC,WAFV;AAGE,cAAA,IAAI,EAAC,QAHP;AAIE,cAAA,OAAO,EAAEjB,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADM,EAsCDQ,QAAQ,GAAGA,QAAQ,CAAC+B,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBACzB,QAAC,OAAD;AAAS,UAAA,OAAO,EAAE/B,OAAlB;AACE,UAAA,UAAU,EAAEC,UADd;AAGE,UAAA,OAAO,EAAE6B;AAHX,WAEOC,KAFP;AAAA;AAAA;AAAA;AAAA,gBADY,CAAH,GAIkB,IA1CzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiDE,GAlDF,MAmDK,oBACD;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKjC,QAAQ,GAAGA,QAAQ,CAAC+B,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBACzB,QAAC,OAAD;AACE,MAAA,OAAO,EAAE/B,OADX;AAEE,MAAA,UAAU,EAAEC,UAFd;AAGc,MAAA,OAAO,EAAE6B;AAHvB,OAGOC,KAHP;AAAA;AAAA;AAAA;AAAA,YADY,CAAH,GAI8B,IAN3C;AAAA;AAAA;AAAA;AAAA;AAAA,UADC;AAUR,CA7FD;;GAAMlC,Q;;KAAAA,Q;AAiGN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchRoutines, getCurrentToken, createRoutine } from '../api';\nimport Routine from './Routine';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst Routines = () => {\n\n    const [routines, setRoutines] = useState([]);\n    const [creator, setCreator] = useState('');\n    const [routineName, setRoutineName] = useState('');\n    const [routineGoal, setRoutineGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false);\n\n    useEffect(() => {\n        fetchRoutines()\n        .then((data) => setRoutines(data))\n        console.log(routines)\n    }, [])\n\n    const useStyles = makeStyles((theme) => ({\n      container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n      formControl: {\n        margin: theme.spacing(2),\n        minWidth: 120,\n      },\n      textFields: {\n          width: '350px',\n          margin: theme.spacing(2)\n        },\n    }));\n\n    const classes = useStyles();\n\n  \n    if(getCurrentToken()) {\n    return (\n        <div className='publicRoutines'>\n            <h1>Fitness Routines</h1>\n\n            <div className='routineform'>\n      <FormControl className={classes.container}>  \n        <form onSubmit={e => {\n          e.preventDefault();\n          createRoutine({routineName, routineGoal, isPublic});\n          alert('Your routine has been created!');\n            //need to redirect to /myroutines\n        }} >\n        <TextField \n          id=\"outlined-basic\" \n          label=\"Name\" \n          variant=\"outlined\" \n          size='small'\n          required onChange={(e) => setRoutineName(e.target.value)} \n          value={routineName}/>\n        <TextField \n          id=\"outlined-basic\" \n          label=\"Goal\" \n          size='small'\n          variant=\"outlined\" \n          required onChange={(e) => setRoutineGoal(e.target.value)} \n          value={routineGoal}/>\n          \n        <label className='label'>Allow others to see? </label>\n          <Checkbox \n            type='checkbox'\n            size='small' \n            value={isPublic}\n            color='primary' \n            onClick={setIsPublic(true)} />\n  \n          <Button \n            color='primary'\n            variant=\"contained\"\n            type='submit'\n            onClick={createRoutine}>Create Routine</Button>\n          </form>\n        </FormControl>\n          {routines ? routines.map((routine, index) => \n          <Routine creator={creator} \n            setCreator={setCreator} \n            key={index} \n            routine={routine} /> ) : null }\n         </div>\n      </div>\n    )}\n    else return (\n        <div className='publicRoutines'>\n            <h1>Fitness Routines</h1>\n            {routines ? routines.map((routine, index) => \n            <Routine \n              creator={creator} \n              setCreator={setCreator} \n              key={index} routine={routine} /> ) : null }\n         </div>\n    )\n}\n\n\n\nexport default Routines;"]},"metadata":{},"sourceType":"module"}