{"ast":null,"code":"import _slicedToArray from\"/home/tradcliffe/fitness_tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Button from'@material-ui/core/Button';import TextField from'@material-ui/core/TextField';import'./style.css';import{makeStyles}from'@material-ui/core/styles';import{createActivity}from'./Activities';import{fetchActivites}from'../api';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddActivityForm=function AddActivityForm(_ref){var open=_ref.open;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),activityName=_useState2[0],setActivityName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),activityDescription=_useState4[0],setActivityDescription=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),activities=_useState6[0],setActivities=_useState6[1];var useStyles=makeStyles(function(theme){return{container:{display:'flex',flexWrap:'wrap'},formControl:{margin:theme.spacing(2),minWidth:120},textFields:{width:'300px',margin:theme.spacing(1)}};});var classes=useStyles();if(open===true){return/*#__PURE__*/_jsx(\"div\",{className:\"activity-form\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){e.preventDefault();createActivity({activityName:activityName,activityDescription:activityDescription});alert('Your activity has been created!');//redirect/refresh page without refreshing\n},children:[/*#__PURE__*/_jsx(TextField,{className:classes.textFields,label:\"Name\",variant:\"outlined\",size:\"small\",required:true,onChange:function onChange(e){return setActivityName(e.target.value);},value:activityName}),/*#__PURE__*/_jsx(TextField,{className:classes.textFields,label:\"Description\",size:\"small\",variant:\"outlined\",required:true,onChange:function onChange(e){return setActivityDescription(e.target.value);},value:activityDescription}),/*#__PURE__*/_jsx(Button,{className:classes.textFields,color:\"primary\",variant:\"contained\",type:\"submit\",children:\"Create Activity\"})]})});}else return/*#__PURE__*/_jsx(\"div\",{});};export default AddActivityForm;","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/AddActivityForm.js"],"names":["React","useState","useEffect","Button","TextField","makeStyles","createActivity","fetchActivites","AddActivityForm","open","activityName","setActivityName","activityDescription","setActivityDescription","activities","setActivities","useStyles","theme","container","display","flexWrap","formControl","margin","spacing","minWidth","textFields","width","classes","e","preventDefault","alert","target","value"],"mappings":"mHAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAO,aAAP,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,cAAT,KAA+B,cAA/B,CACA,OAASC,cAAT,KAA+B,QAA/B,C,wFAGA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAY,IAAVC,CAAAA,IAAU,MAAVA,IAAU,eAEQR,QAAQ,CAAC,EAAD,CAFhB,wCAEzBS,YAFyB,eAEXC,eAFW,8BAGsBV,QAAQ,CAAC,EAAD,CAH9B,yCAGzBW,mBAHyB,eAGJC,sBAHI,8BAIIZ,QAAQ,CAAC,EAAD,CAJZ,yCAIzBa,UAJyB,eAIbC,aAJa,eAMhC,GAAMC,CAAAA,SAAS,CAAGX,UAAU,CAAC,SAACY,KAAD,QAAY,CACvCC,SAAS,CAAE,CACTC,OAAO,CAAE,MADA,CAETC,QAAQ,CAAE,MAFD,CAD4B,CAKvCC,WAAW,CAAE,CACXC,MAAM,CAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADG,CAEXC,QAAQ,CAAE,GAFC,CAL0B,CASvCC,UAAU,CAAE,CACRC,KAAK,CAAE,OADC,CAERJ,MAAM,CAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CAFA,CAT2B,CAAZ,EAAD,CAA5B,CAeA,GAAMI,CAAAA,OAAO,CAAGX,SAAS,EAAzB,CAIJ,GAAGP,IAAI,GAAK,IAAZ,CAAkB,CACd,mBACA,YAAK,SAAS,CAAC,eAAf,uBACI,cAAM,QAAQ,CAAE,kBAAAmB,CAAC,CAAI,CACjBA,CAAC,CAACC,cAAF,GACAvB,cAAc,CAAC,CAACI,YAAY,CAAZA,YAAD,CAAeE,mBAAmB,CAAnBA,mBAAf,CAAD,CAAd,CACAkB,KAAK,CAAC,iCAAD,CAAL,CACA;AACH,CALD,wBAMA,KAAC,SAAD,EAAW,SAAS,CAAEH,OAAO,CAACF,UAA9B,CACE,KAAK,CAAC,MADR,CAEE,OAAO,CAAC,UAFV,CAGE,IAAI,CAAC,OAHP,CAIE,QAAQ,KAJV,CAIW,QAAQ,CAAE,kBAACG,CAAD,QAAOjB,CAAAA,eAAe,CAACiB,CAAC,CAACG,MAAF,CAASC,KAAV,CAAtB,EAJrB,CAKE,KAAK,CAAEtB,YALT,EANA,cAYA,KAAC,SAAD,EAAW,SAAS,CAAEiB,OAAO,CAACF,UAA9B,CACE,KAAK,CAAC,aADR,CAEE,IAAI,CAAC,OAFP,CAGE,OAAO,CAAC,UAHV,CAIE,QAAQ,KAJV,CAIW,QAAQ,CAAE,kBAACG,CAAD,QAAOf,CAAAA,sBAAsB,CAACe,CAAC,CAACG,MAAF,CAASC,KAAV,CAA7B,EAJrB,CAKE,KAAK,CAAEpB,mBALT,EAZA,cAmBE,KAAC,MAAD,EAAQ,SAAS,CAAEe,OAAO,CAACF,UAA3B,CACE,KAAK,CAAC,SADR,CAEE,OAAO,CAAC,WAFV,CAGE,IAAI,CAAC,QAHP,6BAnBF,GADJ,EADA,CA6BC,CA9BL,IA8BW,oBAAO,cAAP,CACV,CAxDD,CA0DA,cAAejB,CAAAA,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './style.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createActivity } from './Activities'\nimport { fetchActivites } from '../api';\n\n\nconst AddActivityForm = ({open}) => {\n\n    const [activityName, setActivityName] = useState('');\n    const [activityDescription, setActivityDescription] = useState('');\n    const [activities, setActivities] = useState([]);\n\n    const useStyles = makeStyles((theme) => ({\n      container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n      formControl: {\n        margin: theme.spacing(2),\n        minWidth: 120,\n      },\n      textFields: {\n          width: '300px',\n          margin: theme.spacing(1)\n        },\n    }));\n\n    const classes = useStyles();\n\n\n\nif(open === true) {\n    return (\n    <div className='activity-form'>\n        <form onSubmit={e => {\n            e.preventDefault();\n            createActivity({activityName, activityDescription});\n            alert('Your activity has been created!');\n            //redirect/refresh page without refreshing\n        }} >\n        <TextField className={classes.textFields}\n          label='Name'\n          variant=\"outlined\" \n          size='small'\n          required onChange={(e) => setActivityName(e.target.value)} \n          value={activityName}/>\n        <TextField className={classes.textFields}\n          label='Description'\n          size='small'\n          variant=\"outlined\" \n          required onChange={(e) => setActivityDescription(e.target.value)} \n          value={activityDescription} />\n        \n          <Button className={classes.textFields}\n            color='primary'\n            variant=\"contained\"\n            type='submit'>Create Activity</Button>\n        </form>\n    </div>  \n\n        )\n    } else return <div></div>;\n}\n\nexport default AddActivityForm;"]},"metadata":{},"sourceType":"module"}