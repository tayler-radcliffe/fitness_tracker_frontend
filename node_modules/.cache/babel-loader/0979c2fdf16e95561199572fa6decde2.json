{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/ActivityForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { fetchUserRoutines, getCurrentToken } from '../api';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport swal from 'sweetalert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActivityForm = ({\n  activity,\n  open,\n  setIsOpen,\n  currentUser,\n  setMyRoutines\n}) => {\n  _s();\n\n  const [count, setCount] = useState('');\n  const [duration, setDuration] = useState('');\n  const activityId = activity.routineActivityId;\n\n  const updateActivity = async ({\n    count,\n    duration\n  }) => {\n    await fetch(`https://fitnesstrac-kr.herokuapp.com/api/routine_activities/${activityId}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${getCurrentToken()}`\n      },\n      body: JSON.stringify({\n        count: count,\n        duration: duration\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n\n      if (result.error) {\n        alert('Please use integer.');\n      } else {\n        swal('Success', 'The activity has been updated.', 'success');\n      }\n    }).catch(console.error);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      position: 'relative',\n      margin: '10px'\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '350px',\n      margin: theme.spacing(2)\n    }\n  }));\n  const classes = useStyles();\n\n  if (open === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: async e => {\n            e.preventDefault();\n            updateActivity({\n              count,\n              duration\n            });\n            const newRoutines = await fetchUserRoutines(currentUser);\n            setMyRoutines(newRoutines);\n            setDuration('');\n            setCount('');\n            setIsOpen(false);\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Duration\",\n            variant: \"outlined\",\n            size: \"small\",\n            onChange: e => setDuration(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Count\",\n            size: \"small\",\n            variant: \"outlined\",\n            onChange: e => setCount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            children: \"Update Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 17\n  }, this);\n};\n\n_s(ActivityForm, \"7tZ2VhmIWPQsjnN9aLZxye9xTT8=\", true);\n\n_c = ActivityForm;\nexport default ActivityForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityForm\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/ActivityForm.js"],"names":["React","useState","fetchUserRoutines","getCurrentToken","Button","TextField","FormControl","makeStyles","swal","ActivityForm","activity","open","setIsOpen","currentUser","setMyRoutines","count","setCount","duration","setDuration","activityId","routineActivityId","updateActivity","fetch","method","headers","body","JSON","stringify","then","response","json","result","console","log","error","alert","catch","useStyles","theme","container","display","flexWrap","position","margin","formControl","spacing","minWidth","textFields","width","classes","e","preventDefault","newRoutines","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { fetchUserRoutines, getCurrentToken } from '../api';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport swal from 'sweetalert';\n\n\nconst ActivityForm = ({activity, open, setIsOpen, currentUser, setMyRoutines}) => {\n\n    const [count, setCount] = useState('');\n    const [duration, setDuration] = useState('');\n\nconst activityId = activity.routineActivityId;\n\n\nconst updateActivity = async ({count, duration}) => {\n    await fetch(`https://fitnesstrac-kr.herokuapp.com/api/routine_activities/${activityId}`, {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${getCurrentToken()}`\n          },\n        body: JSON.stringify({\n            count: count,\n            duration: duration\n        })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n        if(result.error) {\n          alert('Please use integer.')\n        } else {\n          swal('Success', 'The activity has been updated.', 'success')\n        }\n    })\n    .catch(console.error);\n    }\n\n\n    const useStyles = makeStyles((theme) => ({\n        container: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          position: 'relative',\n          margin: '10px'\n        },\n        formControl: {\n          margin: theme.spacing(2),\n          minWidth: 120,\n        },\n        textFields: {\n            width: '350px',\n            margin: theme.spacing(2)\n          },\n      }));\n  \n      const classes = useStyles();\n\nif(open === true) {\n    return (\n        <div>\n        <FormControl className={classes.container}>  \n          <form onSubmit={async (e) => {\n            e.preventDefault();\n            updateActivity({count, duration});\n            const newRoutines = await fetchUserRoutines(currentUser);\n            setMyRoutines(newRoutines);\n            setDuration('');\n            setCount('');\n            setIsOpen(false);\n                        \n\n        }} >\n        <TextField \n          label='Duration'\n          variant=\"outlined\" \n          size='small'\n          onChange={(e) => setDuration(e.target.value)}/>\n        <TextField \n          label='Count'\n          size='small'\n          variant=\"outlined\" \n          onChange={(e) => setCount(e.target.value)}/>\n        \n          <Button \n            color='primary'\n            variant=\"contained\"\n            type='submit'>Update Activity</Button>\n          </form>\n        </FormControl>\n        </div>\n    )}\n    else return <div></div>;\n}\n\nexport default ActivityForm;"]},"metadata":{},"sourceType":"module"}