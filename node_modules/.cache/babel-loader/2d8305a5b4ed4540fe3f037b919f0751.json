{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/UpdateRoutineForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { getCurrentToken, fetchUserRoutines } from '../api';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createActivity } from './Activities';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateRoutineForm = ({\n  currentUser,\n  setMyRoutines,\n  setIsRoutineOpen,\n  routineOpen,\n  routine\n}) => {\n  _s();\n\n  const [routineName, setRoutineName] = useState('');\n  const [routineGoal, setRoutineGoal] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n\n  const updateRoutine = ({\n    routineName,\n    routineGoal,\n    isPublic\n  }) => {\n    fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines/${routine.id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${getCurrentToken()}`\n      },\n      body: JSON.stringify({\n        name: routineName,\n        goal: routineGoal,\n        isPublic: isPublic\n      })\n    }).then(response => response.json()).then(result => {\n      if (result.error) {\n        swal({\n          title: 'Oops',\n          text: result.error,\n          icon: 'error'\n        });\n      } else {\n        swal('Success', 'Your routine has been updated!', 'success');\n      }\n\n      console.log(result);\n    }).catch(console.error);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textFields: {\n      width: '250px',\n      margin: theme.spacing(1)\n    },\n    textFields: {\n      width: '250px',\n      margin: theme.spacing(1)\n    }\n  }));\n  const classes = useStyles();\n\n  if (routineOpen === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"updateRoutineForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: async e => {\n          e.preventDefault();\n          updateRoutine({\n            routineName,\n            routineGoal\n          });\n          const data = await fetchUserRoutines(currentUser);\n          setMyRoutines(data);\n          setRoutineName('');\n          setRoutineGoal('');\n          setIsRoutineOpen(false);\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          onChange: e => setRoutineName(e.target.value),\n          value: routineName,\n          size: \"small\",\n          variant: \"outlined\",\n          label: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          onChange: e => setRoutineGoal(e.target.value),\n          label: \"Goal\",\n          value: routineGoal,\n          size: \"small\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.textFields,\n          children: \"Allow others to see? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: isPublic,\n          type: \"checkbox\",\n          color: \"primary\",\n          onClick: () => {\n            if (isPublic === false) {\n              setIsPublic(true);\n            } else {\n              setIsPublic(false);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.textFields,\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Update Routine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 15\n  }, this);\n};\n\n_s(UpdateRoutineForm, \"xyXomnH6u0h0fbCXEo9dhl0Qaco=\", true);\n\n_c = UpdateRoutineForm;\nexport default UpdateRoutineForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateRoutineForm\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/UpdateRoutineForm.js"],"names":["React","useState","getCurrentToken","fetchUserRoutines","Button","TextField","FormControl","makeStyles","createActivity","Checkbox","UpdateRoutineForm","currentUser","setMyRoutines","setIsRoutineOpen","routineOpen","routine","routineName","setRoutineName","routineGoal","setRoutineGoal","isPublic","setIsPublic","updateRoutine","fetch","id","method","headers","body","JSON","stringify","name","goal","then","response","json","result","error","swal","title","text","icon","console","log","catch","useStyles","theme","container","display","flexWrap","textFields","width","margin","spacing","classes","e","preventDefault","data","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { getCurrentToken, fetchUserRoutines } from '../api'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createActivity } from './Activities';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nconst UpdateRoutineForm = ({ currentUser, setMyRoutines, setIsRoutineOpen, routineOpen, routine }) => {\n\n  const [routineName, setRoutineName] = useState('');\n  const [routineGoal, setRoutineGoal] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n\n  const updateRoutine = ({ routineName, routineGoal, isPublic }) => {\n    fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines/${routine.id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${getCurrentToken()}`\n      },\n      body: JSON.stringify({\n        name: routineName,\n        goal: routineGoal,\n        isPublic: isPublic\n      })\n    }).then(response => response.json())\n      .then(result => {\n        if (result.error) {\n          swal({\n            title: 'Oops',\n            text: result.error,\n            icon: 'error'\n          })\n        } else {\n          swal('Success', 'Your routine has been updated!', 'success');\n        }\n        console.log(result);\n      })\n      .catch(console.error);\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n\n    },\n    textFields: {\n      width: '250px',\n      margin: theme.spacing(1),\n    },\n    textFields: {\n      width: '250px',\n      margin: theme.spacing(1)\n    },\n  }));\n\n  const classes = useStyles();\n\n\n  if (routineOpen === true) {\n    return (\n      <div className='updateRoutineForm'>\n        <form onSubmit={async (e) => {\n          e.preventDefault();\n          updateRoutine({ routineName, routineGoal });\n          const data = await fetchUserRoutines(currentUser);\n          setMyRoutines(data);\n          setRoutineName('');\n          setRoutineGoal('');\n          setIsRoutineOpen(false);\n\n        }} >\n          <TextField className={classes.textFields}\n            onChange={(e) => setRoutineName(e.target.value)}\n            value={routineName}\n            size='small'\n            variant=\"outlined\"\n            label='Name'\n          />\n          <TextField className={classes.textFields}\n            onChange={(e) => setRoutineGoal(e.target.value)}\n            label='Goal'\n            value={routineGoal}\n            size='small'\n            variant=\"outlined\" />\n\n          <label className={classes.textFields}>Allow others to see? </label>\n          <Checkbox\n            value={isPublic}\n            type='checkbox'\n            color='primary' onClick={() => {\n              if (isPublic === false) {\n                setIsPublic(true)\n              }\n              else {\n                setIsPublic(false)\n              }\n            }} />\n          <Button className={classes.textFields}\n            type='submit'\n            color='primary'\n            variant='contained'>Update Routine</Button>\n        </form>\n      </div>\n    )\n  }\n  else return <div></div>;\n}\n\n\nexport default UpdateRoutineForm;"]},"metadata":{},"sourceType":"module"}