{"ast":null,"code":"import _regeneratorRuntime from\"/home/tradcliffe/fitness_tracker/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/tradcliffe/fitness_tracker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/tradcliffe/fitness_tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{fetchUserRoutines,getCurrentToken}from'../api';import Button from'@material-ui/core/Button';import TextField from'@material-ui/core/TextField';import'./style.css';import FormControl from'@material-ui/core/FormControl';import{makeStyles}from'@material-ui/core/styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ActivityForm=function ActivityForm(_ref){var activity=_ref.activity,open=_ref.open,setIsOpen=_ref.setIsOpen,currentUser=_ref.currentUser,setMyRoutines=_ref.setMyRoutines;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),duration=_useState4[0],setDuration=_useState4[1];var activityId=activity.routineActivityId;var updateActivity=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2){var count,duration;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:count=_ref2.count,duration=_ref2.duration;_context.next=3;return fetch(\"https://fitnesstrac-kr.herokuapp.com/api/routine_activities/\".concat(activityId),{method:\"PATCH\",headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(getCurrentToken())},body:JSON.stringify({count:count,duration:duration})}).then(function(response){return response.json();}).then(function(result){console.log(result);if(result.error){alert('Please use integer.');}else{alert('The activity has been updated.');}}).catch(console.error);case 3:case\"end\":return _context.stop();}}},_callee);}));return function updateActivity(_x){return _ref3.apply(this,arguments);};}();var useStyles=makeStyles(function(theme){return{container:{display:'flex',flexWrap:'wrap',position:'relative',margin:'10px'},formControl:{margin:theme.spacing(2),minWidth:120},textFields:{width:'350px',margin:theme.spacing(2)}};});var classes=useStyles();if(open===true){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(FormControl,{className:classes.container,children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var newRoutines;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();updateActivity({count:count,duration:duration});_context2.next=4;return fetchUserRoutines(currentUser);case 4:newRoutines=_context2.sent;setMyRoutines(newRoutines);setDuration('');setCount('');setIsOpen(false);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref4.apply(this,arguments);};}(),children:[/*#__PURE__*/_jsx(TextField,{label:\"Duration\",variant:\"outlined\",size:\"small\",onChange:function onChange(e){return setDuration(e.target.value);}}),/*#__PURE__*/_jsx(TextField,{label:\"Count\",size:\"small\",variant:\"outlined\",onChange:function onChange(e){return setCount(e.target.value);}}),/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"contained\",type:\"submit\",children:\"Update Activity\"})]})})});}else return/*#__PURE__*/_jsx(\"div\",{});};export default ActivityForm;","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/ActivityForm.js"],"names":["React","useState","fetchUserRoutines","getCurrentToken","Button","TextField","FormControl","makeStyles","ActivityForm","activity","open","setIsOpen","currentUser","setMyRoutines","count","setCount","duration","setDuration","activityId","routineActivityId","updateActivity","fetch","method","headers","body","JSON","stringify","then","response","json","result","console","log","error","alert","catch","useStyles","theme","container","display","flexWrap","position","margin","formControl","spacing","minWidth","textFields","width","classes","e","preventDefault","newRoutines","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { fetchUserRoutines, getCurrentToken } from '../api';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst ActivityForm = ({activity, open, setIsOpen, currentUser, setMyRoutines}) => {\n\n    const [count, setCount] = useState('');\n    const [duration, setDuration] = useState('');\n\nconst activityId = activity.routineActivityId;\n\n\nconst updateActivity = async ({count, duration}) => {\n    await fetch(`https://fitnesstrac-kr.herokuapp.com/api/routine_activities/${activityId}`, {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${getCurrentToken()}`\n          },\n        body: JSON.stringify({\n            count: count,\n            duration: duration\n        })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n        if(result.error) {\n          alert('Please use integer.')\n        } else {\n          alert('The activity has been updated.')\n        }\n    })\n    .catch(console.error);\n    }\n\n\n    const useStyles = makeStyles((theme) => ({\n        container: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          position: 'relative',\n          margin: '10px'\n        },\n        formControl: {\n          margin: theme.spacing(2),\n          minWidth: 120,\n        },\n        textFields: {\n            width: '350px',\n            margin: theme.spacing(2)\n          },\n      }));\n  \n      const classes = useStyles();\n\nif(open === true) {\n    return (\n        <div>\n        <FormControl className={classes.container}>  \n          <form onSubmit={async (e) => {\n            e.preventDefault();\n            updateActivity({count, duration});\n            const newRoutines = await fetchUserRoutines(currentUser);\n            setMyRoutines(newRoutines);\n            setDuration('');\n            setCount('');\n            setIsOpen(false);\n                        \n\n        }} >\n        <TextField \n          label='Duration'\n          variant=\"outlined\" \n          size='small'\n          onChange={(e) => setDuration(e.target.value)}/>\n        <TextField \n          label='Count'\n          size='small'\n          variant=\"outlined\" \n          onChange={(e) => setCount(e.target.value)}/>\n        \n          <Button \n            color='primary'\n            variant=\"contained\"\n            type='submit'>Update Activity</Button>\n          </form>\n        </FormControl>\n        </div>\n    )}\n    else return <div></div>;\n}\n\nexport default ActivityForm;"]},"metadata":{},"sourceType":"module"}