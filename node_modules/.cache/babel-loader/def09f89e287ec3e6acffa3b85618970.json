{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { getCurrentToken, storeLoginToken } from '../api';\nimport '../components/register.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = ({\n  setCurrentUser,\n  username,\n  password,\n  confirmedPassword,\n  setUsername,\n  setPassword,\n  setConfirmedPassword\n}) => {\n  _s();\n\n  const [token, setToken] = useState('');\n\n  const registerUser = async (username, password) => {\n    if (password !== confirmedPassword) {\n      alert('Passwords must match');\n    } else {\n      await fetch('https://fitnesstrac-kr.herokuapp.com/api/users/register', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n\n        if (result.error) {\n          alert(result.message);\n          setUsername('');\n          setPassword('');\n          setConfirmedPassword('');\n        } else {\n          console.log('This is your login token', result.token);\n          setToken(result.token);\n          storeLoginToken(result.token);\n          setCurrentUser(result.user.username);\n          setUsername('');\n          setPassword('');\n          setConfirmedPassword('');\n        }\n      }).catch(console.error);\n    }\n  };\n\n  const handleClick = event => {\n    event.preventDefault();\n    registerUser(username, password);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '250px',\n      margin: theme.spacing(2),\n      marginTop: '5px'\n    }\n  }));\n  const classes = useStyles();\n\n  if (token) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/myroutines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create an Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          type: \"text\",\n          value: username,\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Username\",\n          min: \"8\",\n          max: \"20\",\n          required: true,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          type: \"password\",\n          value: password,\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Password\",\n          minLength: \"7\",\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          type: \"password\",\n          value: confirmedPassword,\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Confirm Password\",\n          minLength: \"7\",\n          required: true,\n          onChange: e => setConfirmedPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            type: \"submit\",\n            color: \"primary\",\n            variant: \"contained\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"register-link\",\n          children: \"Already have an account? Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"sxpBjtwi9wfj8+ju4Vgljc9GwYY=\", true);\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/Register.js"],"names":["React","useState","Redirect","Link","getCurrentToken","storeLoginToken","FormControl","makeStyles","Button","OutlinedInput","TextField","useHistory","Register","setCurrentUser","username","password","confirmedPassword","setUsername","setPassword","setConfirmedPassword","token","setToken","registerUser","alert","fetch","method","headers","body","JSON","stringify","then","response","json","result","console","log","error","message","user","catch","handleClick","event","preventDefault","useStyles","theme","container","display","flexWrap","formControl","margin","spacing","minWidth","textFields","width","marginTop","classes","shrink","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { getCurrentToken, storeLoginToken } from '../api';\nimport '../components/register.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from \"react-router-dom\";\n\n\n\nconst Register = ({ setCurrentUser, username, password, confirmedPassword, setUsername, setPassword, setConfirmedPassword }) => {\n\n  const [token, setToken] = useState('');\n\n  const registerUser = async (username, password) => {\n    if(password !== confirmedPassword) {\n      alert('Passwords must match')\n    } else {\n    await fetch('https://fitnesstrac-kr.herokuapp.com/api/users/register', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => response.json())\n      .then(result => {\n        console.log(result);\n        if(result.error) {\n          alert(result.message);\n          setUsername('');\n          setPassword('');\n          setConfirmedPassword('');\n        } else {\n        console.log('This is your login token', result.token)\n        setToken(result.token);\n        storeLoginToken(result.token);\n        setCurrentUser(result.user.username);\n        setUsername('');\n          setPassword('');\n          setConfirmedPassword('');\n        }\n      })\n      .catch(console.error);\n  }};\n \n\n\n  const handleClick = (event) => {\n      event.preventDefault();\n      registerUser(username, password);\n    };\n\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '250px',\n      margin: theme.spacing(2),\n      marginTop: '5px'\n    },\n  }));\n\n  const classes = useStyles();\n\n  if(token) {\n    return <Redirect to = '/myroutines' /> }\n\n  return (\n    <div className=\"register-container\">\n      <form className=\"register-form\" onSubmit={handleClick}>\n        <h2>Create an Account</h2>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n\n          <TextField className={classes.textFields}\n            type='text'\n            value={username}\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            label='Username'\n            min='8' max='20' required\n            onChange={(e) => setUsername(e.target.value)}\n          />\n\n          <TextField className={classes.textFields}\n            type='password'\n            value={password}\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            label='Password'\n            minLength=\"7\"\n            required\n            onChange={(e) => setPassword(e.target.value)}\n          />\n\n          <TextField className={classes.textFields}\n            type='password'\n            value={confirmedPassword}\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            label='Confirm Password'\n            minLength=\"7\"\n            required\n            onChange={(e) => setConfirmedPassword(e.target.value)}\n          />\n          <div className=\"register-button\">\n            <Button\n              size='large'\n              type='submit'\n              color='primary'\n              variant=\"contained\"\n            >Register</Button>\n\n          </div>\n\n          <Link to=\"/login\" className=\"register-link\">\n            Already have an account? Sign in\n                </Link>\n        </FormControl>\n      </form>\n    </div>\n  )\n}\n\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}