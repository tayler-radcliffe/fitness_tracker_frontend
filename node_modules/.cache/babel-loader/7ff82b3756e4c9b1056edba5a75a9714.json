{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/MyRoutine.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MyActivity from './MyActivity';\nimport { fetchUserRoutines, getCurrentToken } from '../api';\nimport AddAnActivityForm from './AddAnActivityForm';\nimport UpdateRoutineForm from './UpdateRoutineForm';\nimport Button from '@material-ui/core/Button';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyRoutine({\n  currentUser,\n  routine,\n  setMyRoutines\n}) {\n  _s();\n\n  const [open, setIsOpen] = useState(false);\n  const [routineOpen, setIsRoutineOpen] = useState(false);\n\n  const showForm = () => {\n    if (open === false) {\n      setIsOpen(true);\n    } else {\n      setIsOpen(false);\n    }\n  };\n\n  const showRoutine = () => {\n    if (routineOpen === false) {\n      setIsRoutineOpen(true);\n    } else {\n      setIsRoutineOpen(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    fetch(`https://fitnesstrac-kr.herokuapp.com/api/routines/${routine.id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${getCurrentToken()}`\n      }\n    }).then(response => response.json()).then(async result => {\n      console.log(result);\n      alert('Your routine has been deleted.');\n      const newRoutines = await fetchUserRoutines(currentUser);\n      setMyRoutines(newRoutines);\n    }).catch(console.error);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"routine-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"routine-title\",\n      children: routine.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routine-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Goal: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), routine.goal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Creator: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), \" \", routine.creatorName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Activities include:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: routine.activities.map((activity, index) => /*#__PURE__*/_jsxDEV(MyActivity, {\n          currentUser: currentUser,\n          setMyRoutines: setMyRoutines,\n          routine: routine,\n          activity: activity\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button\",\n        color: \"secondary\",\n        onClick: showForm,\n        variant: \"contained\",\n        children: open ? 'Hide' : 'Add an Activity'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddAnActivityForm, {\n        currentUser: currentUser,\n        setMyRoutines: setMyRoutines,\n        routine: routine,\n        setIsOpen: setIsOpen,\n        open: open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button\",\n        color: \"secondary\",\n        variant: \"contained\",\n        onClick: showRoutine,\n        children: routineOpen ? 'Hide' : 'Update Routine'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UpdateRoutineForm, {\n        currentUser: currentUser,\n        setMyRoutines: setMyRoutines,\n        setIsRoutineOpen: setIsRoutineOpen,\n        setMyRoutines: setMyRoutines,\n        routineOpen: routineOpen,\n        routine: routine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button\",\n        color: \"secondary\",\n        onClick: showForm,\n        variant: \"contained\",\n        onClick: handleDelete,\n        children: \"Delete Entire Routine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"This routine is \", routine.isPublic ? 'public.' : 'private.']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyRoutine, \"WaBwm7FY6vDsZjM7Uq+VPxkGkZc=\");\n\n_c = MyRoutine;\nexport default MyRoutine;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutine\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/MyRoutine.js"],"names":["React","useState","MyActivity","fetchUserRoutines","getCurrentToken","AddAnActivityForm","UpdateRoutineForm","Button","MyRoutine","currentUser","routine","setMyRoutines","open","setIsOpen","routineOpen","setIsRoutineOpen","showForm","showRoutine","handleDelete","fetch","id","method","headers","then","response","json","result","console","log","alert","newRoutines","catch","error","name","goal","creatorName","activities","map","activity","index","isPublic"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport MyActivity from './MyActivity';\nimport { fetchUserRoutines, getCurrentToken } from '../api';\nimport AddAnActivityForm from './AddAnActivityForm';\nimport UpdateRoutineForm from './UpdateRoutineForm';\nimport Button from '@material-ui/core/Button';\nimport './style.css';\n\n\nfunction MyRoutine({ currentUser, routine, setMyRoutines }) {\n\n    const [open, setIsOpen] = useState(false);\n    const [routineOpen, setIsRoutineOpen] = useState(false);\n\n    const showForm = () => {\n        if (open === false) {\n            setIsOpen(true)\n        }\n        else {\n            setIsOpen(false)\n        }\n    }\n\n    const showRoutine = () => {\n        if (routineOpen === false) {\n            setIsRoutineOpen(true);\n        }\n        else {\n            setIsRoutineOpen(false)\n        }\n    }\n\n\n    const handleDelete = async () => {\n        fetch(`https://fitnesstrac-kr.herokuapp.com/api/routines/${routine.id}`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${getCurrentToken()}`\n            }\n        }).then(response => response.json())\n            .then(async(result) => {\n                console.log(result);\n                alert('Your routine has been deleted.')\n                const newRoutines = await fetchUserRoutines(currentUser);\n                setMyRoutines(newRoutines);\n            })\n            .catch(console.error);\n    }\n\n\n    return (\n        <div class=\"routine-card\">\n            <h2 className=\"routine-title\">{routine.name}</h2>\n            <div className=\"routine-content\">\n                <h3><strong>Goal: </strong>{routine.goal}</h3>\n                <h3><strong>Creator: </strong> {routine.creatorName}</h3>\n                <h3><strong>Activities include:</strong></h3>\n                <h4>{routine.activities.map((activity, index) =>\n                <MyActivity\n                    currentUser={currentUser}\n                    setMyRoutines={setMyRoutines}\n                    routine={routine}\n                    key={index}\n                    activity={activity} />)}</h4>\n                <Button\n                    className='button'\n                    color='secondary'\n                    onClick={showForm}\n                    variant=\"contained\">\n                    {open ? 'Hide' : 'Add an Activity'}</Button>\n                <AddAnActivityForm\n                    currentUser={currentUser}\n                    setMyRoutines={setMyRoutines}\n                    routine={routine}\n                    setIsOpen={setIsOpen}\n                    open={open} />\n                <Button\n                    className='button'\n                    color='secondary'\n                    variant=\"contained\"\n                    onClick={showRoutine}>\n                    {routineOpen ? 'Hide' : 'Update Routine'}\n                </Button>\n                <UpdateRoutineForm\n                    currentUser={currentUser}\n                    setMyRoutines={setMyRoutines}\n                    setIsRoutineOpen={setIsRoutineOpen}\n                    setMyRoutines={setMyRoutines}\n                    routineOpen={routineOpen}\n                    routine={routine} />\n                <Button\n                    className='button'\n                    color='secondary'\n                    onClick={showForm}\n                    variant=\"contained\"\n                    onClick={handleDelete}>Delete Entire Routine</Button>\n                <h4>This routine is {routine.isPublic ? 'public.' : 'private.'}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default MyRoutine;\n"]},"metadata":{},"sourceType":"module"}