{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/Routines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchRoutines, getCurrentToken } from '../api';\nimport Routine from './Routine';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const createRoutine = async ({\n  routineName,\n  routineGoal,\n  isPublic\n}) => {\n  await fetch('http://fitnesstrac-kr.herokuapp.com/api/routines', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getCurrentToken()}`\n    },\n    body: JSON.stringify({\n      name: routineName,\n      goal: routineGoal,\n      isPublic: isPublic\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n};\n\nconst Routines = () => {\n  _s();\n\n  const [routines, setRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [routineName, setRoutineName] = useState('');\n  const [routineGoal, setRoutineGoal] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n  useEffect(() => {\n    fetchRoutines().then(data => setRoutines(data));\n    console.log(routines);\n  }, []);\n\n  if (getCurrentToken()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"publicRoutines\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fitness Routines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"routineform\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.container,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              createRoutine({\n                routineName,\n                routineGoal,\n                isPublic\n              });\n              alert('Your routine has been created!'); //need to redirect to /myroutines\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Name\",\n              variant: \"outlined\",\n              size: \"small\",\n              required: true,\n              onChange: e => setRoutineName(e.target.value),\n              value: routineName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Goal\",\n              size: \"small\",\n              variant: \"outlined\",\n              required: true,\n              onChange: e => setRoutineGoal(e.target.value),\n              value: routineGoal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              children: \"Allow others to see? \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n              type: \"checkbox\",\n              size: \"small\",\n              value: isPublic,\n              color: \"primary\",\n              onClick: () => setIsPublic(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              type: \"submit\",\n              onClick: createRoutine,\n              children: \"Create Routine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(Routine, {\n          creator: creator,\n          setCreator: setCreator,\n          routine: routine\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 56\n        }, this)) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"publicRoutines\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fitness Routines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(Routine, {\n      creator: creator,\n      setCreator: setCreator,\n      routine: routine\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 58\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Routines, \"jCZenzDRTqFuJSDhYY+fd0UEaTw=\");\n\n_c = Routines;\nexport default Routines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routines\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/Routines.js"],"names":["React","useEffect","useState","fetchRoutines","getCurrentToken","Routine","Button","TextField","Checkbox","FormControl","makeStyles","createRoutine","routineName","routineGoal","isPublic","fetch","method","headers","body","JSON","stringify","name","goal","then","response","json","result","console","log","catch","error","Routines","routines","setRoutines","creator","setCreator","setRoutineName","setRoutineGoal","setIsPublic","data","classes","container","e","preventDefault","alert","target","value","map","routine","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchRoutines, getCurrentToken } from '../api';\nimport Routine from './Routine';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nexport const createRoutine = async ({routineName, routineGoal, isPublic}) => {\n  await fetch('http://fitnesstrac-kr.herokuapp.com/api/routines', {\n      method: \"POST\",\n      headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${getCurrentToken()}`\n        },\n      body: JSON.stringify({\n          name: routineName,\n          goal: routineGoal,\n          isPublic: isPublic\n    })\n  }).then(response => response.json())\n  .then(result => {\n      console.log(result);\n  })\n  .catch(console.error);\n}\n\n\nconst Routines = () => {\n\n    const [routines, setRoutines] = useState([]);\n    const [creator, setCreator] = useState('');\n    const [routineName, setRoutineName] = useState('');\n    const [routineGoal, setRoutineGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false);\n\n    useEffect(() => {\n        fetchRoutines()\n        .then((data) => setRoutines(data))\n        console.log(routines)\n    }, [])\n  \n    if(getCurrentToken()) {\n    return (\n        <div className='publicRoutines'>\n            <h1>Fitness Routines</h1>\n\n            <div className='routineform'>\n      <FormControl className={classes.container}>  \n        <form onSubmit={e => {\n          e.preventDefault();\n          createRoutine({routineName, routineGoal, isPublic});\n          alert('Your routine has been created!');\n            //need to redirect to /myroutines\n        }} >\n        <TextField \n          id=\"outlined-basic\" \n          label=\"Name\" \n          variant=\"outlined\" \n          size='small'\n          required onChange={(e) => setRoutineName(e.target.value)} \n          value={routineName}/>\n        <TextField \n          id=\"outlined-basic\" \n          label=\"Goal\" \n          size='small'\n          variant=\"outlined\" \n          required onChange={(e) => setRoutineGoal(e.target.value)} \n          value={routineGoal}/>\n          \n        <label className='label'>Allow others to see? </label>\n          <Checkbox \n            type='checkbox'\n            size='small' \n            value={isPublic}\n            color='primary' \n            onClick={() => setIsPublic(true)} />\n  \n          <Button \n            color='primary'\n            variant=\"contained\"\n            type='submit'\n            onClick={createRoutine}>Create Routine</Button>\n          </form>\n        </FormControl>\n          {routines ? routines.map((routine, index) => <Routine creator={creator} setCreator={setCreator} key={index} routine={routine} /> ) : null }\n         </div>\n      </div>\n    )}\n    else return (\n        <div className='publicRoutines'>\n            <h1>Fitness Routines</h1>\n            {routines ? routines.map((routine, index) => <Routine creator={creator} setCreator={setCreator} key={index} routine={routine} /> ) : null }\n         </div>\n    )\n}\n\n\n\nexport default Routines;"]},"metadata":{},"sourceType":"module"}