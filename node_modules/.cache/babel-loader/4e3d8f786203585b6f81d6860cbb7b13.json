{"ast":null,"code":"export function storeLoginToken(token) {\n  localStorage.setItem('token', JSON.stringify(token));\n}\nexport function getCurrentToken() {\n  const token = localStorage.getItem('token');\n  return token;\n}\nexport function clearCurrentToken() {\n  localStorage.removeItem('token');\n}\nexport const fetchRoutines = async () => {\n  const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/routines', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n};\nexport const fetchUserRoutines = async user => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`https://fitnesstrac-kr.herokuapp.com/api/users/${user}/routines`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const data = await response.json();\n  return data;\n};\nexport const fetchActivities = async () => {\n  const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/activities', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data;\n};\nexport const fetchUsername = async () => {\n  const token = localStorage.getItem('token');\n  const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const createRoutine = async ({\n  routineName,\n  routineGoal,\n  isPublic\n}) => {\n  const token = localStorage.getItem('token');\n  await fetch('https://fitnesstrac-kr.herokuapp.com/api/routines', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      name: routineName,\n      goal: routineGoal,\n      isPublic: isPublic\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n};","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/api/index.js"],"names":["storeLoginToken","token","localStorage","setItem","JSON","stringify","getCurrentToken","getItem","clearCurrentToken","removeItem","fetchRoutines","response","fetch","headers","data","json","fetchUserRoutines","user","fetchActivities","fetchUsername","console","log","createRoutine","routineName","routineGoal","isPublic","method","body","name","goal","then","result","catch","error"],"mappings":"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","sourcesContent":["export function storeLoginToken(token) {\n    localStorage.setItem('token', JSON.stringify(token));\n  }\n  \n  export function getCurrentToken() {\n    const token = localStorage.getItem('token');\n    return token;\n  }\n  \n  export function clearCurrentToken() {\n    localStorage.removeItem('token');\n  }\n\n\nexport const fetchRoutines = async () => {\n  const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/routines', {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  const data = await response.json();\n\n  return data;\n}\n\nexport const fetchUserRoutines = async (user) => {\n    const token = localStorage.getItem('token');\n\n    const response = await fetch(`https://fitnesstrac-kr.herokuapp.com/api/users/${user}/routines`, {\n       headers: {\n         'Content-Type': 'application/json',\n         'Authorization': `Bearer ${token}`\n         },\n     });\n     const data = await response.json();\n     return data;\n}\n\n\nexport const fetchActivities = async () => {\n  const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/activities', {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  const data = await response.json();\n\n  return data;\n}\n\n\nexport const fetchUsername = async () => {\n  const token = localStorage.getItem('token');\n\n    const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/users/me', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n    })\n    const data = await response.json();\n    console.log(data);\n\n    return data;\n}\n\n\n\nexport const createRoutine = async ({routineName, routineGoal, isPublic}) => {\n  const token = localStorage.getItem('token');\n\n  await fetch('https://fitnesstrac-kr.herokuapp.com/api/routines', {\n      method: \"POST\",\n      headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n      body: JSON.stringify({\n          name: routineName,\n          goal: routineGoal,\n          isPublic: isPublic\n    })\n  }).then(response => response.json())\n  .then(result => {\n      console.log(result);\n  })\n  .catch(console.error);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}