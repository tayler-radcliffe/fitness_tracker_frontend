{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/Routines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchRoutines, getCurrentToken, createRoutine } from '../api';\nimport Routine from './Routine';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Routines = () => {\n  _s();\n\n  const [routines, setRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [open, setIsOpen] = useState(false);\n  useEffect(() => {\n    fetchRoutines().then(data => setRoutines(data));\n    console.log(routines);\n  }, []);\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '350px',\n      margin: theme.spacing(2)\n    }\n  }));\n  const classes = useStyles();\n\n  const showForm = () => {\n    if (open === false) {\n      setIsOpen(true);\n    } else {\n      setIsOpen(false);\n    }\n  };\n\n  if (getCurrentToken()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        type: \"submit\",\n        onClick: showForm,\n        children: \"Create A New Routine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoutineForm, {\n        routines: routines,\n        open: open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(Routine, {\n        creator: creator,\n        setCreator: setCreator,\n        routine: routine\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"publicRoutines\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fitness Routines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(Routine, {\n      creator: creator,\n      setCreator: setCreator,\n      routine: routine\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Routines, \"Qx3mIBljLXmQ14Sgp9NZb00XIho=\", true);\n\n_c = Routines;\nexport default Routines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routines\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/Routines.js"],"names":["React","useEffect","useState","fetchRoutines","getCurrentToken","createRoutine","Routine","Button","TextField","Checkbox","FormControl","makeStyles","Routines","routines","setRoutines","creator","setCreator","open","setIsOpen","then","data","console","log","useStyles","theme","container","display","flexWrap","formControl","margin","spacing","minWidth","textFields","width","classes","showForm","map","routine","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchRoutines, getCurrentToken, createRoutine } from '../api';\nimport Routine from './Routine';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst Routines = () => {\n\n    const [routines, setRoutines] = useState([]);\n    const [creator, setCreator] = useState('');\n    const [open, setIsOpen] = useState(false);\n\n    useEffect(() => {\n        fetchRoutines()\n        .then((data) => setRoutines(data))\n        console.log(routines)\n    }, [])\n\n    const useStyles = makeStyles((theme) => ({\n      container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n      formControl: {\n        margin: theme.spacing(2),\n        minWidth: 120,\n      },\n      textFields: {\n          width: '350px',\n          margin: theme.spacing(2)\n        },\n    }));\n\n    const classes = useStyles();\n\n   \n    const showForm = () => {\n        if (open === false){\n             setIsOpen(true)}\n        else {\n            setIsOpen(false)\n        }\n    }\n\n\n  \n  if(getCurrentToken()) {\n    return (\n      <div>\n        <Button \n              color=\"secondary\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={showForm}>Create A New Routine</Button>\n                <RoutineForm routines={routines} open={open}/>\n          {routines ? routines.map((routine, index) => \n          <Routine creator={creator} \n            setCreator={setCreator} \n            key={index} \n            routine={routine} /> ) : null }\n      </div>\n    )}\n    else return (\n        <div className='publicRoutines'>\n            <h1>Fitness Routines</h1>\n            {routines ? routines.map((routine, index) => \n            <Routine \n              creator={creator} \n              setCreator={setCreator} \n              key={index} routine={routine} /> ) : null }\n         </div>\n    )\n}\n\n\n\nexport default Routines;"]},"metadata":{},"sourceType":"module"}