{"version":3,"sources":["api/index.js","components/Home.js","components/Register.js","components/Login.js","components/Activity.js","components/AddAnActivityForm.js","components/AddActivityForm.js","components/Activities.js","components/UpdateRoutineForm.js","components/Routine.js","components/RoutineForm.js","components/Routines.js","components/ActivityForm.js","components/MyActivity.js","components/MyRoutine.js","components/MyRoutines.js","index.js"],"names":["storeLoginToken","token","localStorage","setItem","getCurrentToken","getItem","clearCurrentToken","removeItem","fetchRoutines","a","fetch","headers","response","json","data","fetchUserRoutines","username","fetchActivities","fetchUsername","console","log","PureComponent","Register","currentUser","setCurrentUser","password","confirmedPassword","setUsername","setPassword","setConfirmedPassword","setMyRoutines","useState","setToken","registerUser","alert","method","body","JSON","stringify","then","result","error","message","catch","handleClick","event","preventDefault","newRoutines","classes","makeStyles","theme","container","display","flexWrap","formControl","margin","spacing","minWidth","textFields","width","marginTop","useStyles","to","className","onSubmit","FormControl","variant","TextField","type","value","InputLabelProps","shrink","label","min","max","required","onChange","e","target","minLength","Button","size","color","Login","loginUser","onClick","Activity","props","activity","class","name","description","duration","count","AddAnActivityForm","setIsOpen","open","routine","activities","setActivities","setActivity","setDuration","setCount","addActivity","id","activityId","useEffect","Promise","all","selector","InputLabel","Select","map","idx","MenuItem","defaultValue","AddActivityForm","activityName","setActivityName","activityDescription","setActivityDescription","createActivity","Activities","creator","setCreator","position","index","UpdateRoutineForm","setIsRoutineOpen","routineOpen","routineName","setRoutineName","routineGoal","setRoutineGoal","isPublic","setIsPublic","updateRoutine","goal","Checkbox","Routine","showForm","creatorName","RoutineForm","createRoutine","Routines","routines","setRoutines","ActivityForm","routineActivityId","updateActivity","MyActivity","handleDelete","MyRoutine","MyRoutines","myRoutines","App","useHistory","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.605ae66d.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport function storeLoginToken(token) {\n  localStorage.setItem('token', token);\n}\n\nexport function getCurrentToken() {\n  const token = localStorage.getItem('token');\n  return token;\n}\n\nexport function clearCurrentToken() {\n  localStorage.removeItem('token');\n}\n\n\nexport const fetchRoutines = async () => {\n  const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/routines', {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  const data = await response.json();\n\n  return data;\n}\n\n\n\nexport const fetchUserRoutines = async (username) => {\n\n  const token = localStorage.getItem('token');\n\n  try {\n    const response = await fetch(`https://fitnesstrac-kr.herokuapp.com/api/users/${username}/routines`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n    });\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\n\nexport const fetchActivities = async () => {\n\n  try {\n    const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/activities', {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\n\nexport const fetchUsername = async () => {\n  const token = localStorage.getItem('token');\n\n  const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n  })\n  const data = await response.json();\n  console.log(data);\n\n  return data;\n}\n","import React, { PureComponent } from 'react';\nimport { getCurrentToken } from '../api';\n\nclass Home extends PureComponent {\n  render() {\n\nif(getCurrentToken()) {\n  return <div id=\"title\">\n      <h1>Welcome back!</h1>\n      <h2>Use the links above to navigate.</h2>\n  </div>\n  }\n\n  else return <div id='title'>\n      <h1>Welcome to Fitness Tracker!</h1>\n      <h2>Find, create, and save fitness routines for a healthier lifestyle!</h2>\n      <a href='/register'>Register for an account here</a>\n  </div>\n    }\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { fetchUserRoutines, getCurrentToken, storeLoginToken } from '../api';\nimport '../components/register.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from \"react-router-dom\";\nimport { CropLandscapeOutlined } from '@material-ui/icons';\n\n\n\nconst Register = ({ currentUser, setCurrentUser, username, password, confirmedPassword, setUsername, setPassword, setConfirmedPassword, setMyRoutines }) => {\n\n  const [token, setToken] = useState('');\n\n  const registerUser = async (username, password) => {\n    if (password !== confirmedPassword) {\n      alert('Passwords must match')\n    } else {\n      await fetch('https://fitnesstrac-kr.herokuapp.com/api/users/register', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      }).then(response => response.json())\n        .then(result => {\n          console.log(result);\n          if (result.error) {\n            alert(result.message);\n            setUsername('');\n            setPassword('');\n            setConfirmedPassword('');\n          } else {\n            console.log('This is your login token', result.token)\n            setToken(result.token);\n            storeLoginToken(result.token);\n            setUsername('');\n            setPassword('');\n            setConfirmedPassword('');\n          }\n        })\n        .catch(console.error);\n    }\n  };\n\n\n  const handleClick = async (event) => {\n    event.preventDefault();\n    registerUser(username, password);\n    setCurrentUser(username);\n    const newRoutines = await fetchUserRoutines(currentUser);\n    setMyRoutines(newRoutines);\n  };\n\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '250px',\n      margin: theme.spacing(2),\n      marginTop: '5px'\n    },\n  }));\n\n  const classes = useStyles();\n\n  if (token) {\n    return <Redirect to='/myroutines' />\n  }\n\n  return (\n    <div className=\"register-container\">\n      <form className=\"register-form\" onSubmit={handleClick}>\n        <h2>Create an Account</h2>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n\n          <TextField className={classes.textFields}\n            type='text'\n            value={username}\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            label='Username'\n            min='8' max='20' required\n            onChange={(e) => setUsername(e.target.value)}\n          />\n\n          <TextField className={classes.textFields}\n            type='password'\n            value={password}\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            label='Password'\n            minLength=\"7\"\n            required\n            onChange={(e) => setPassword(e.target.value)}\n          />\n\n          <TextField className={classes.textFields}\n            type='password'\n            value={confirmedPassword}\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            label='Confirm Password'\n            minLength=\"7\"\n            required\n            onChange={(e) => setConfirmedPassword(e.target.value)}\n          />\n          <div className=\"register-button\">\n            <Button\n              size='large'\n              type='submit'\n              color='primary'\n              variant=\"contained\"\n            >Register</Button>\n\n          </div>\n\n          <Link to=\"/login\" className=\"register-link\">\n            Already have an account? Sign in\n                </Link>\n        </FormControl>\n      </form>\n    </div>\n  )\n}\n\n\nexport default Register;","import React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { fetchUserRoutines, getCurrentToken, storeLoginToken } from '../api';\nimport './login.css'\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst Login = ({username, setUsername, password, setPassword, setCurrentUser, setMyRoutines, currentUser}) => {\n\n  const [token, setToken] = useState('');\n\n  const loginUser = async (username, password) => {\n    await fetch('https://fitnesstrac-kr.herokuapp.com/api/users/login', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => response.json())\n      .then(result => {\n        console.log(result);\n        if(result.error) {\n          alert(result.message);\n          setUsername('');\n          setPassword(''); \n        } else {\n        const token = result.token;\n        console.log('This is your login token', token)\n        setToken(token);\n        storeLoginToken(token);\n        setUsername('');\n        setPassword(''); \n        }\n      })\n      .catch(console.error);\n  };\n\n  const handleClick = async (event) => {\n      event.preventDefault();\n      setCurrentUser(username);\n      loginUser(username, password);\n      const newRoutines = await fetchUserRoutines(currentUser);\n      setMyRoutines(newRoutines);      \n  };\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n        width: '250px',\n        margin: theme.spacing(2),\n        marginTop: '5px'\n      },\n  }));\n\n  const classes = useStyles();\n\n\n  if(token) {\n    return <Redirect to = '/myroutines' /> }\n\n    return (\n    <div className=\"login-container\">\n        <form className=\"login-form\" onSubmit={handleClick}>\n        <h2>Login here</h2>\n        <FormControl variant=\"outlined\"  className={classes.formControl}>\n                \n                <TextField className={classes.textFields}\n                     type='text' \n                     value={username}\n                     variant=\"outlined\"\n                     InputLabelProps={{\n                      shrink: true,\n                    }} \n                     label='Username' \n                     min='8' max='20' required \n                     onChange={(e) => setUsername(e.target.value) }\n                />\n        \n                <TextField className={classes.textFields}\n                    type='password' \n                    value={password}\n                    variant=\"outlined\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }} \n                    label='Password' \n                    min='8' max='20' required \n                    onChange={(e) => setPassword(e.target.value) }\n                />\n            <div className=\"login-button\">\n                <Button \n                  size='large'\n                  type='submit'\n                  color='primary'\n                  variant=\"contained\"\n                  onClick={() => handleClick}>Login</Button>\n            </div> \n            \n          <Link to=\"/\" className='login-link'>Don't have an account? Sign Up</Link>\n          </FormControl>\n        </form>\n    </div>\n    )\n}\n\nexport default Login;","import React from \"react\";\n\nexport default function Activity (props) {\n    const {\n        activity\n    } = props;\n\n\n    return (\n        <div class=\"activity-card\">\n            <h4>Name: {activity.name}</h4>\n            <h4>Description: {activity.description}</h4>\n            <h4>Duration: {activity.duration}</h4>\n            <h4>Count: {activity.count}</h4>\n        </div>\n        )\n}\n","import React, { useState, useEffect } from 'react';\nimport { fetchActivities, fetchUserRoutines, getCurrentToken } from '../api';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\n\n\nconst AddAnActivityForm = ({setIsOpen, open, routine, setMyRoutines, currentUser}) => {\n\n    const [activities, setActivities] = useState([]);\n    const [activity, setActivity] = useState('');\n    const [duration, setDuration] = useState('');\n    const [count, setCount] = useState('');\n\n    const addActivity = ({activity, count, duration}) => {\n        fetch(`https://fitnesstrac-kr.herokuapp.com/api/routines/${routine.id}/activities`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${getCurrentToken()}`\n              },\n            body: JSON.stringify({\n                activityId: activity,\n                count: count, \n                duration: duration\n            })\n    }).then(response => response.json())\n      .then(result => {\n        console.log(result);\n        if(result.error) {\n            alert('That activity already exists under this routine.')\n        } else {\n            alert('Your activity was added.')\n        }\n      })\n      .catch(console.error);\n    }\n\n\n    useEffect(() => {\n        Promise.all([fetchActivities()]).then(([data]) => {\n            setActivities(data);\n          });\n    }, [])\n\n    const useStyles = makeStyles((theme) => ({\n        textFields: {\n            width: '300px',\n            margin: theme.spacing(1)\n          },\n         selector: {\n            width: '300px',\n            margin: theme.spacing(1)\n\n          },\n      }));\n\n      const classes = useStyles();\n\n\nif(open === true) {\n        return (\n                <form onSubmit={async (e) => {\n                    e.preventDefault();\n                    addActivity({activity, count, duration});\n                    const newRoutines = await fetchUserRoutines(currentUser);\n                    setMyRoutines(newRoutines);\n                    setActivity('');\n                    setCount('');\n                    setDuration('');\n                    setIsOpen(false);\n                }}>\n                <FormControl variant=\"outlined\" >\n                    <InputLabel id=\"demo-simple-select-outlined-label\"\n                    className={classes.selector}>Activity</InputLabel>\n                    <Select \n                        className={classes.selector}\n                        id=\"demo-simple-select-outlined\"\n                        value={activity} \n                        label=\"activity\"\n                        size='small'\n                        onChange={event => {setActivity(event.target.value)}}>\n                        {activities.map((activity, idx) => { \n                            return <MenuItem key={idx} value={activity.id}>{activity.name}</MenuItem>\n                        })}\n                \n                    </Select>\n                    <TextField\n                        className={classes.textFields}\n                        label=\"Count\"\n                        defaultValue=\"\"\n                        variant=\"outlined\"\n                        size='small'\n                        value={count}\n                        onChange={(e) => setCount(e.target.value)}\n                    />\n                    <TextField\n                        className={classes.textFields}\n                        label=\"Duration\"\n                        defaultValue=\"\"\n                        size='small'\n                        variant=\"outlined\"\n                        value={duration}\n                        onChange={(e) => setDuration(e.target.value)}\n                    />\n             \n                <Button \n                    className={classes.textFields}\n                    variant=\"contained\"\n                    color='primary'\n                    type='submit'\n                    onClick={() => addActivity}>Add Activity</Button> \n                </FormControl>\n            </form>\n        )\n    } else return <div></div>;\n}\n\nexport default AddAnActivityForm;","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './style.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createActivity } from './Activities'\nimport { fetchActivities } from '../api';\n\n\nconst AddActivityForm = ({ setIsOpen, open, setActivities }) => {\n\n  const [activityName, setActivityName] = useState('');\n  const [activityDescription, setActivityDescription] = useState('');\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120,\n    },\n    textFields: {\n      width: '300px',\n      margin: theme.spacing(1)\n    },\n  }));\n\n  const classes = useStyles();\n\n\n\n  if (open === true) {\n    return (\n      <div className='activity-form'>\n        <form onSubmit={async (e) => {\n          e.preventDefault();\n          createActivity({ activityName, activityDescription });\n          const data = await fetchActivities();\n          setActivities(data);\n          setActivityName('');\n          setActivityDescription('');\n          setIsOpen(false);\n        }} >\n          <TextField className={classes.textFields}\n            label='Name'\n            variant=\"outlined\"\n            size='small'\n            required onChange={(e) => setActivityName(e.target.value)}\n            value={activityName} />\n\n          <TextField className={classes.textFields}\n            label='Description'\n            size='small'\n            variant=\"outlined\"\n            required onChange={(e) => setActivityDescription(e.target.value)}\n            value={activityDescription} />\n\n          <Button className={classes.textFields}\n            color='primary'\n            variant=\"contained\"\n            type='submit'>Create Activity</Button>\n        </form>\n      </div>\n\n    )\n  } else return <div></div>;\n}\n\nexport default AddActivityForm;","import React, { useEffect, useState } from 'react';\nimport { fetchActivities, getCurrentToken } from '../api';\nimport Activity from './Activity';\nimport Button from '@material-ui/core/Button';\nimport AddActivityForm from './AddActivityForm';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nexport const createActivity = async ({activityName, activityDescription}) => {\n    await fetch('https://fitnesstrac-kr.herokuapp.com/api/activities', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${getCurrentToken()}`\n          },\n        body: JSON.stringify({\n            name: activityName,\n            description: activityDescription\n      })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n        if(result.error) {\n          alert(result.error)\n        } else {\n          alert('Your activity has been created')\n        }\n    })\n    .catch(console.error);\n}\n\n\nconst Activities = () => {\n\n    const [activities, setActivities] = useState([]);\n    const [creator, setCreator] = useState('');\n    const [open, setIsOpen] = useState(false);\n\n    useEffect(() => {\n      Promise.all([fetchActivities()]).then(([data]) => {\n        setActivities(data);\n      });\n    }, [])\n\n    const showForm = () => {\n      if (open === false){\n           setIsOpen(true)}\n      else {\n          setIsOpen(false)\n      }\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      position: 'relative',\n      margin: '10px',\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120,\n    },\n    textFields: {\n        width: '350px',\n        margin: theme.spacing(2)\n      },\n  }));\n\n  const classes = useStyles();\n\n  if(getCurrentToken()) {\n    return (\n      <div className='activities'>\n         <h1>Activities</h1>\n          <Button className={classes.container}\n            onClick={showForm}\n            color='secondary'\n            variant='contained'>Create A New Activity</Button>\n          <AddActivityForm setIsOpen={setIsOpen} open={open} setActivities={setActivities}/>\n            {activities ? activities.map((activity, index) => <Activity creator={creator} setCreator={setCreator} key={index} activity={activity} /> ) : null }\n         </div>\n    )} else {\n        return (\n            <div className='activities'>\n            <h1>Activities</h1>\n            {activities ? activities.map((activity, index) => <Activity creator={creator} setCreator={setCreator} key={index} activity={activity} /> ) : null }\n         </div>\n\n        )\n    }\n}\n\n\nexport default Activities;","import React from 'react';\nimport { useState } from 'react';\nimport { getCurrentToken, fetchUserRoutines } from '../api'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createActivity } from './Activities';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nconst UpdateRoutineForm = ({currentUser, setMyRoutines, setIsRoutineOpen, routineOpen, routine}) => {\n\n    const [routineName, setRoutineName] = useState('');\n    const [routineGoal, setRoutineGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false);\n\n    const updateRoutine = ({routineName, routineGoal, isPublic}) => {\n        fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines/${routine.id}`, {\n            method: \"PATCH\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${getCurrentToken()}`\n              },\n            body: JSON.stringify({\n                name: routineName,\n                goal: routineGoal,\n                isPublic: isPublic\n            })\n            }).then(response => response.json())\n            .then(result => {\n                console.log(result);\n            })\n            .catch(console.error);\n    }\n\n    const useStyles = makeStyles((theme) => ({\n      container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n\n      },\n      textFields: {\n          width: '250px',\n          margin: theme.spacing(1),\n        },\n        textFields: {\n          width: '250px',\n          margin: theme.spacing(1)\n        },\n    }));\n  \n    const classes = useStyles();\n    \n\nif(routineOpen === true) {\n    return (\n        <div className='updateRoutineForm'>\n            <form onSubmit={async (e) => {\n              e.preventDefault();\n              updateRoutine({routineName, routineGoal});\n              alert('Your routine has been updated!');\n              const data = await fetchUserRoutines(currentUser);\n              setMyRoutines(data);\n              setRoutineName('');\n              setRoutineGoal('');\n              setIsRoutineOpen(false);\n\n            }} >\n              <TextField className={classes.textFields}\n              onChange={(e) => setRoutineName(e.target.value)} \n              value={routineName} \n              size='small'\n              variant=\"outlined\"\n              label='Name' \n              />\n              <TextField className={classes.textFields}\n              onChange={(e) => setRoutineGoal(e.target.value)} \n              label='Goal'\n              value={routineGoal} \n              size='small'\n               variant=\"outlined\" />\n          \n            <label className={classes.textFields}>Allow others to see? </label>\n              <Checkbox \n              value={isPublic} \n               type='checkbox'\n               color='primary' onClick={() => {\n                  if(isPublic === false){\n                      setIsPublic(true)}\n                      else {\n                      setIsPublic(false)}}} />\n              <Button className={classes.textFields}\n              type='submit'\n              color='primary'\n              variant='contained'>Update Routine</Button>\n            </form>\n         </div>\n    )} \n    else return <div></div>;\n}\n\n\nexport default UpdateRoutineForm;","import React, { useEffect, useState } from 'react';\nimport Activity from './Activity';\nimport { getCurrentToken } from '../api';\nimport AddAnActivityForm from './AddAnActivityForm';\nimport UpdateRoutineForm from './UpdateRoutineForm';\nimport Button from '@material-ui/core/Button';\nimport './style.css'\n\n\nfunction Routine({ routine, currentUser, setCurrentUser }) {\n\n    const [open, setIsOpen] = useState(false);\n    const [routineOpen, setIsRoutineOpen] = useState(false);\n\n    const showForm = () => {\n        if (open === false) {\n            setIsOpen(true);\n        }\n        else {\n            setIsOpen(false)\n        }\n    }\n\n    const showRoutine = () => {\n        if (routineOpen === false) {\n            setIsRoutineOpen(true);\n        }\n        else {\n            setIsRoutineOpen(false)\n        }\n    }\n\n\n\n    const handleDelete = () => {\n        fetch(`https://fitnesstrac-kr.herokuapp.com/api/routines/${routine.id}`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${getCurrentToken()}`\n            }\n        }).then(response => response.json())\n            .then(result => {\n                console.log(result);\n            })\n            .catch(console.error);\n    }\n\n\n\n    if (routine.isPublic === true && currentUser === routine.creatorName) {\n        return (\n            <div class=\"routine-card\">\n                <h2 className=\"routine-title\">{routine.name}</h2>\n                <div className=\"routine-content\">\n                    <h3><strong>Goal: </strong>{routine.goal}</h3>\n                    <h3><strong>Creator: </strong> {routine.creatorName}</h3>\n                    <h3><strong>Activities include:</strong></h3>\n                    <h4>{routine.activities.map((activity, index) =>\n                        <Activity\n                            routine={routine}\n                            key={index}\n                            activity={activity} />)}</h4>\n                    <Button\n                        className='routine-button'\n                        color='secondary'\n                        onClick={showForm}\n                        variant=\"contained\">\n                        {open ? 'Hide' : 'Add an Activity'}</Button>\n                    <AddAnActivityForm\n                        setIsOpen={setIsOpen}\n                        routine={routine}\n                        open={open} />\n                    <Button\n                        className='routine-button'\n                        color='secondary'\n                        variant=\"contained\"\n                        onClick={showRoutine}>\n                        {routineOpen ? 'Hide' : 'Update Routine'}\n                    </Button>\n                    <UpdateRoutineForm\n                        setIsRoutineOpen={setIsRoutineOpen}\n                        routineOpen={routineOpen}\n                        routine={routine} />\n                    <Button\n                        className='routine-button'\n                        color='secondary'\n                        onClick={showForm}\n                        variant=\"contained\"\n                        onClick={handleDelete}>Delete Entire Routine</Button>\n                    <h4>This routine is {routine.isPublic ? 'public.' : 'private.'}</h4>\n                </div>\n            </div>\n        )\n    } else return (\n        <div class=\"routine-card\">\n            <h2 className=\"routine-title\">{routine.name}</h2>\n            <div className=\"routine-content\">\n                <h3><strong>Goal: </strong>{routine.goal}</h3>\n                <h3><strong>Creator: </strong> {routine.creatorName}</h3>\n                <h3><strong>Activities include:</strong></h3>\n                <h4>{routine.activities.map((activity, index) => <Activity routine={routine} key={index} activity={activity} />)}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default Routine;","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './style.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fetchUserRoutines } from '../api';\n\n\nconst RoutineForm = ({setIsOpen, open, setMyRoutines, currentUser}) => {\n\n    const [routineName, setRoutineName] = useState('');\n    const [routineGoal, setRoutineGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false);\n\n\n    const useStyles = makeStyles((theme) => ({\n        container: {\n          display: 'flex',\n          flexWrap: 'wrap',\n        },\n        formControl: {\n          margin: theme.spacing(2),\n          minWidth: 120,\n        },\n        textFields: {\n            width: '300px',\n            margin: theme.spacing(1)\n          },\n      }));\n\n      const classes = useStyles();\n\n\n      \nconst createRoutine = async ({ routineName, routineGoal, isPublic }) => {\n  const token = localStorage.getItem('token');\n\n  await fetch('https://fitnesstrac-kr.herokuapp.com/api/routines', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      name: routineName,\n      goal: routineGoal,\n      isPublic: isPublic\n    })\n  }).then(response => response.json())\n    .then(result => {\n      console.log(result);\n      if(result.error) {\n        alert('Sorry, that routine already exists. Please try again.')\n      } else {\n        alert('Your routine has been created!');\n      }\n    })\n    .catch(console.error);\n}\n\n\n\nif(open === true) {\n    return (\n      <div className='routineform'>\n        <form onSubmit={async (e) => {\n          e.preventDefault();\n          createRoutine({routineName, routineGoal, isPublic});\n          const data = await fetchUserRoutines(currentUser);\n          setMyRoutines(data);\n          setRoutineName('');\n          setRoutineGoal('');\n          setIsPublic(false);\n          setIsOpen(false);\n\n        }} >\n        <TextField \n          className={classes.textFields}\n          id=\"outlined-basic\" \n          label=\"Name\" \n          variant=\"outlined\" \n          size='small'\n          required onChange={(e) => setRoutineName(e.target.value)} \n          value={routineName}/>\n        <TextField \n         className={classes.textFields}\n          id=\"outlined-basic\" \n          label=\"Goal\" \n          size='small'\n          variant=\"outlined\" \n          required onChange={(e) => setRoutineGoal(e.target.value)} \n          value={routineGoal}/>\n          \n        <label className='label'\n        className={classes.textFields}>Allow others to see? </label>\n          <Checkbox\n            type='checkbox'\n            size='small' \n            value={isPublic}\n            color='primary' \n            onClick={() => setIsPublic(true)} />\n  \n          <Button className={classes.textFields}\n            color='primary'\n            variant=\"contained\"\n            type='submit'>Create Routine</Button>\n          </form>\n\n      </div>\n    )}\n    else return (\n        <div></div>\n    )\n  }\n\nexport default RoutineForm;","import React, { useEffect, useState } from 'react';\nimport { fetchRoutines, getCurrentToken, createRoutine } from '../api';\nimport Routine from './Routine';\nimport Button from '@material-ui/core/Button';\nimport './style.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RoutineForm from './RoutineForm';\n\n\nconst Routines = ({ currentUser, setCurrentUser }) => {\n\n  const [routines, setRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [open, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    Promise.all([fetchRoutines()]).then(([data]) => {\n      setRoutines(data);\n    });\n  }, [])\n\n  const showForm = () => {\n    if (open === false) {\n      setIsOpen(true)\n    }\n    else {\n      setIsOpen(false)\n    }\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      position: 'relative',\n      margin: '10px',\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120,\n    },\n    textFields: {\n      width: '350px',\n      margin: theme.spacing(2)\n    },\n  }));\n\n  const classes = useStyles();\n\n\n  if (getCurrentToken()) {\n    return (\n      <div className='routine-card'>\n        <h1>Fitness Routines</h1>\n        <Button\n          className={classes.container}\n          color=\"secondary\"\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={showForm}>Create A New Routine</Button>\n        <RoutineForm routines={routines} open={open} />\n        {routines ? routines.map((routine, index) =>\n          <Routine currentUser={currentUser}\n            setCurrentUser={setCurrentUser}\n            creator={creator}\n            setCreator={setCreator}\n            key={index}\n            routine={routine} />) : null}\n      </div>\n    )\n  }\n  else return (\n    <div className='publicRoutines'>\n      <h1>Fitness Routines</h1>\n      {routines ? routines.map((routine, index) =>\n        <Routine currentUser={currentUser} setCurrentUser={setCurrentUser}\n          creator={creator}\n          setCreator={setCreator}\n          key={index} routine={routine} />) : null}\n    </div>\n  )\n}\n\n\n\nexport default Routines;","import React, { useState } from 'react';\nimport { fetchUserRoutines, getCurrentToken } from '../api';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst ActivityForm = ({activity, open, setIsOpen, currentUser, setMyRoutines}) => {\n\n    const [count, setCount] = useState('');\n    const [duration, setDuration] = useState('');\n\nconst activityId = activity.routineActivityId;\n\n\nconst updateActivity = async ({count, duration}) => {\n    await fetch(`https://fitnesstrac-kr.herokuapp.com/api/routine_activities/${activityId}`, {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${getCurrentToken()}`\n          },\n        body: JSON.stringify({\n            count: count,\n            duration: duration\n        })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n        if(result.error) {\n          alert('Please use integer.')\n        } else {\n          alert('The activity has been updated.')\n        }\n    })\n    .catch(console.error);\n    }\n\n\n    const useStyles = makeStyles((theme) => ({\n        container: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          position: 'relative',\n          margin: '10px'\n        },\n        formControl: {\n          margin: theme.spacing(2),\n          minWidth: 120,\n        },\n        textFields: {\n            width: '350px',\n            margin: theme.spacing(2)\n          },\n      }));\n  \n      const classes = useStyles();\n\nif(open === true) {\n    return (\n        <div>\n        <FormControl className={classes.container}>  \n          <form onSubmit={async (e) => {\n            e.preventDefault();\n            updateActivity({count, duration});\n            const newRoutines = await fetchUserRoutines(currentUser);\n            setMyRoutines(newRoutines);\n            setDuration('');\n            setCount('');\n            setIsOpen(false);\n                        \n\n        }} >\n        <TextField \n          label='Duration'\n          variant=\"outlined\" \n          size='small'\n          onChange={(e) => setDuration(e.target.value)}/>\n        <TextField \n          label='Count'\n          size='small'\n          variant=\"outlined\" \n          onChange={(e) => setCount(e.target.value)}/>\n        \n          <Button \n            color='primary'\n            variant=\"contained\"\n            type='submit'>Update Activity</Button>\n          </form>\n        </FormControl>\n        </div>\n    )}\n    else return <div></div>;\n}\n\nexport default ActivityForm;","import React, { useState, useEffect } from \"react\";\nimport { fetchUsername, fetchUserRoutines, getCurrentToken } from '../api';\nimport ActivityForm from './ActivityForm';\nimport Button from '@material-ui/core/Button';\n\nexport default function MyActivity(props) {\n    const {\n        activity,\n        currentUser,\n        setMyRoutines\n    } = props;\n\n    const activityId = activity.routineActivityId;\n\n    const [open, setIsOpen] = useState(false);\n\n    const openForm = () => {\n        if (open === false) {\n            setIsOpen(true);\n        }\n        else {\n            setIsOpen(false)\n        }\n    }\n\n    const handleDelete = async () => {\n        fetch(`https://fitnesstrac-kr.herokuapp.com/api/routine_activities/${activityId}`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${getCurrentToken()}`\n            }\n        }).then(response => response.json())\n            .then(async (result) => {\n                console.log(result);\n                alert('Your activity has been deleted.')\n                const newRoutines = await fetchUserRoutines(currentUser);\n                setMyRoutines(newRoutines);\n            })\n            .catch(console.error);\n    }\n\n    if (getCurrentToken()) {\n        return (\n            <div class=\"activity-card\">\n                <h4>Name: {activity.name}</h4>\n                <h4>Description: {activity.description}</h4>\n                <h4>Duration: {activity.duration}</h4>\n                <h4>Count: {activity.count}</h4>\n                <Button\n                    className='routine-button'\n                    onClick={openForm}\n                    className='editbutton'\n                    color='secondary'\n                    variant=\"contained\" >{open ? 'Hide' : 'Update Activity'}</Button>\n                <ActivityForm id='activityform'\n                    currentUser={currentUser}\n                    setMyRoutines={setMyRoutines}\n                    activity={activity}\n                    setIsOpen={setIsOpen}\n                    open={open} />\n                <Button\n                    className='routine-button'\n                    onClick={handleDelete}\n                    className='editbutton'\n                    color='secondary'\n                    variant=\"contained\">Delete Activity</Button>\n            </div>\n        )\n\n    }\n}\n","import React, { useState } from 'react';\nimport MyActivity from './MyActivity';\nimport { fetchUserRoutines, getCurrentToken } from '../api';\nimport AddAnActivityForm from './AddAnActivityForm';\nimport UpdateRoutineForm from './UpdateRoutineForm';\nimport Button from '@material-ui/core/Button';\nimport './style.css';\n\n\nfunction MyRoutine({ currentUser, routine, setMyRoutines }) {\n\n    const [open, setIsOpen] = useState(false);\n    const [routineOpen, setIsRoutineOpen] = useState(false);\n\n    const showForm = () => {\n        if (open === false) {\n            setIsOpen(true)\n        }\n        else {\n            setIsOpen(false)\n        }\n    }\n\n    const showRoutine = () => {\n        if (routineOpen === false) {\n            setIsRoutineOpen(true);\n        }\n        else {\n            setIsRoutineOpen(false)\n        }\n    }\n\n\n    const handleDelete = async () => {\n        fetch(`https://fitnesstrac-kr.herokuapp.com/api/routines/${routine.id}`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${getCurrentToken()}`\n            }\n        }).then(response => response.json())\n            .then(async(result) => {\n                console.log(result);\n                alert('Your routine has been deleted.')\n                const newRoutines = await fetchUserRoutines(currentUser);\n                setMyRoutines(newRoutines);\n            })\n            .catch(console.error);\n    }\n\n\n    return (\n        <div class=\"routine-card\">\n            <h2 className=\"routine-title\">{routine.name}</h2>\n            <div className=\"routine-content\">\n                <h3><strong>Goal: </strong>{routine.goal}</h3>\n                <h3><strong>Creator: </strong> {routine.creatorName}</h3>\n                <h3><strong>Activities include:</strong></h3>\n                <h4>{routine.activities.map((activity, index) =>\n                <MyActivity\n                    currentUser={currentUser}\n                    setMyRoutines={setMyRoutines}\n                    routine={routine}\n                    key={index}\n                    activity={activity} />)}</h4>\n                <Button\n                    className='button'\n                    color='secondary'\n                    onClick={showForm}\n                    variant=\"contained\">\n                    {open ? 'Hide' : 'Add an Activity'}</Button>\n                <AddAnActivityForm\n                    currentUser={currentUser}\n                    setMyRoutines={setMyRoutines}\n                    routine={routine}\n                    setIsOpen={setIsOpen}\n                    open={open} />\n                <Button\n                    className='button'\n                    color='secondary'\n                    variant=\"contained\"\n                    onClick={showRoutine}>\n                    {routineOpen ? 'Hide' : 'Update Routine'}\n                </Button>\n                <UpdateRoutineForm\n                    currentUser={currentUser}\n                    setMyRoutines={setMyRoutines}\n                    setIsRoutineOpen={setIsRoutineOpen}\n                    setMyRoutines={setMyRoutines}\n                    routineOpen={routineOpen}\n                    routine={routine} />\n                <Button\n                    className='button'\n                    color='secondary'\n                    onClick={showForm}\n                    variant=\"contained\"\n                    onClick={handleDelete}>Delete Entire Routine</Button>\n                <h4>This routine is {routine.isPublic ? 'public.' : 'private.'}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default MyRoutine;\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { fetchUsername, getCurrentToken, fetchUserRoutines } from '../api';\nimport MyRoutine from './MyRoutine';\nimport Button from '@material-ui/core/Button';\nimport RoutineForm from './RoutineForm';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst MyRoutines = ({ currentUser }) => {\n\n  const [myRoutines, setMyRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [open, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    Promise.all([fetchUserRoutines(currentUser)]).then(([data]) => {\n      setMyRoutines(data)})\n  }, [])\n\n\n\n  const showForm = () => {\n    if (open === false) {\n      setIsOpen(true)\n    }\n    else {\n      setIsOpen(false)\n    }\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      position: 'relative',\n      margin: '10px',\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120,\n    },\n    textFields: {\n      width: '350px',\n      margin: theme.spacing(2)\n    },\n  }));\n\n  const classes = useStyles();\n\n\n  return (\n    <div className='routine-card'>\n      <h1>Welcome, {currentUser}!</h1>\n      <h2>Routines you've created:</h2>\n      <Button\n        className={classes.container}\n        color=\"secondary\"\n        variant=\"contained\"\n        type=\"submit\"\n        onClick={showForm}>{open ? 'Hide' : 'Create A New Routine'}</Button>\n      <RoutineForm setIsOpen={setIsOpen} currentUser={currentUser} setMyRoutines={setMyRoutines} open={open} />\n      {myRoutines ? myRoutines.map((routine, index) =>\n        <MyRoutine\n          currentUser={currentUser}\n          setMyRoutines={setMyRoutines}\n          creator={creator}\n          setCreator={setCreator}\n          key={index}\n          routine={routine} />)\n        : <h1>Use the form above to start creating routines.</h1>}\n    </div>\n  )\n}\n\n\nexport default MyRoutines;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { clearCurrentToken, getCurrentToken, fetchUsername, fetchUserRoutines } from './api'\nimport '../src/style.css';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\nimport HomeIcon from '@material-ui/icons/Home';\n\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Switch,\n    useHistory,\n    Redirect\n} from 'react-router-dom';\n\nimport {\n    Register,\n    Login,\n    Routines,\n    MyRoutines,\n    Activities\n} from './components';\n\n\nconst App = () => {\n\n    const history = useHistory();\n\n//use states\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmedPassword, setConfirmedPassword] = useState('');\n    const [currentUser, setCurrentUser] = useState('');\n    const [myRoutines, setMyRoutines] = useState([]);\n\n    useEffect(() => {\n        Promise.all([fetchUsername()]).then(([data]) => {\n            setCurrentUser(data.username);\n          });\n    }, []);\n\n    useEffect(() => {\n        Promise.all([fetchUserRoutines(currentUser)]).then(([data]) => {\n          setMyRoutines(data)})\n      }, [])\n\n\nreturn (\n    <Router>\n        <div className=\"app\">\n            \n            <div className=\"headerspacer\"></div>\n            <main>\n            <Switch>\n         \n               <Route exact path='/'>\n                    <div className='introbg'>\n                        <h1 className='intro'>Welcome to Fitness Tracker</h1>\n                        <nav className='intronav'>\n                            <Link to='/publicroutines' ><FitnessCenterIcon className='textmiddle'/> </Link>\n                            <Link to='/publicactivities' ><DirectionsRunIcon className='textmiddle' /> </Link>\n                        </nav>\n                    </div>\n                        <Register currentUser={currentUser} setCurrentUser={setCurrentUser} username={username} setUsername={setUsername} password={password} setPassword={setPassword} \n                        confirmedPassword={confirmedPassword} setConfirmedPassword={setConfirmedPassword} setMyRoutines={setMyRoutines} />\n                </Route>\n\n                <Route exact path='/publicroutines'>\n                         <nav className='intronavtwo'>\n                            <Link to='/' ><HomeIcon className='textmiddle'/> </Link>\n                            <Link to='/publicroutines' ><FitnessCenterIcon className='textmiddle'/> </Link>\n                            <Link to='/publicactivities' ><DirectionsRunIcon className='textmiddle' /> </Link>\n                        </nav>\n                    <Routines setCurrentUser={setCurrentUser} currentUser={currentUser}/>\n                </Route>\n                \n                <Route exact path='/publicactivities'>\n                     <nav className='intronavtwo'>\n                            <Link to='/' ><HomeIcon className='textmiddle'/> </Link>\n                            <Link to='/publicroutines' ><FitnessCenterIcon className='textmiddle'/> </Link>\n                            <Link to='/publicactivities' ><DirectionsRunIcon className='textmiddle' /> </Link>\n                    </nav>\n                    <Activities />\n                </Route>  \n\n                <Route exact path='/myroutines'>\n                    <header className='authorizedheader'>\n                    <h1>Fitness Tracker</h1>\n                        <nav className='authorizednav'>\n                                <Link to='/myroutines' ><HomeIcon className='textmiddle'/> </Link>\n                                <Link to='/routines' ><FitnessCenterIcon className='textmiddle'/> </Link>\n                                <Link to='/activities' ><DirectionsRunIcon className='textmiddle' /> </Link>\n                                <Link to='/' onClick={() => {\n                                clearCurrentToken();\n                                setCurrentUser('');\n                                }}>Logout</Link>\n                        </nav>\n                    </header>\n                    <div class=\"spacer\"></div>\n                    <MyRoutines myRoutines={myRoutines} setMyRoutines={setMyRoutines} setCurrentUser={setCurrentUser} currentUser={currentUser}/>\n                </Route>\n\n                <Route exact path='/routines'>\n                    <header className='authorizedheader'>\n                        <h1>Fitness Tracker</h1>\n                        <nav className='authorizednav'>\n                                <Link to='/myroutines' ><HomeIcon className='textmiddle'/> </Link>\n                                <Link to='/routines' ><FitnessCenterIcon className='textmiddle'/> </Link>\n                                <Link to='/activities' ><DirectionsRunIcon className='textmiddle' /> </Link>\n                                <Link to='/' onClick={() => {\n                                clearCurrentToken();\n                                setCurrentUser('');\n                                }}>Logout</Link>\n                        </nav>\n                    </header>\n                    <div class=\"spacer\"></div>\n                    <Routines/>\n\n                </Route>\n\n                <Route exact path='/activities'>\n                    <header className='authorizedheader'>\n                        <h1>Fitness Tracker</h1>\n                        <nav className='authorizednav'>\n                                <Link to='/myroutines' ><HomeIcon className='textmiddle'/> </Link>\n                                <Link to='/routines' ><FitnessCenterIcon className='textmiddle'/> </Link>\n                                <Link to='/activities' ><DirectionsRunIcon className='textmiddle' /> </Link>\n                                <Link to='/' onClick={() => {\n                                clearCurrentToken();\n                                setCurrentUser('');\n                                }}>Logout</Link>\n                        </nav>\n                    </header>\n                    <div class=\"spacer\"></div>\n                    <Activities/>\n                </Route>  \n\n                <Route exact path='/login'>\n                    <div className='introbg'>\n                    <h1 className='intro'>Welcome to Fitness Tracker</h1>\n                        <nav className='intronav'>\n                            <Link to='/publicroutines' ><FitnessCenterIcon className='textmiddle'/> </Link>\n                            <Link to='/publicactivities' ><DirectionsRunIcon className='textmiddle' /> </Link>\n                        </nav>\n                        <Login setMyRoutines={setMyRoutines} username={username} setUsername={setUsername} password={password} setPassword={setPassword} \n                        confirmedPassword={confirmedPassword} setConfirmedPassword={setConfirmedPassword} setCurrentUser={setCurrentUser} currentUser={currentUser}/>\n                    </div>\n                </Route>\n\n            </Switch>\n            </main>\n        </div>\n    </Router>\n)}\n  \n\n\nReactDOM.render(\n    <Router>\n         <App />\n    </Router>,\n    document.getElementById('app'),\n  )"],"sourceRoot":""}