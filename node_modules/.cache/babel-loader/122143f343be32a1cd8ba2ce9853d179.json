{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/MyRoutines.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { fetchUsername, getCurrentToken, fetchUserRoutines } from '../api';\nimport MyRoutine from './MyRoutine';\nimport Button from '@material-ui/core/Button';\nimport RoutineForm from './RoutineForm';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyRoutines = ({\n  currentUser\n}) => {\n  _s();\n\n  const [myRoutines, setMyRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [open, setIsOpen] = useState(false);\n  useEffect(() => {\n    Promise.all([fetchUserRoutines(currentUser)]).then(([data]) => {\n      setMyRoutines(data);\n    });\n  }, []);\n\n  const showForm = () => {\n    if (open === false) {\n      setIsOpen(true);\n    } else {\n      setIsOpen(false);\n    }\n  };\n\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      position: 'relative',\n      margin: '10px'\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '350px',\n      margin: theme.spacing(2)\n    }\n  }));\n  const classes = useStyles();\n\n  if (currentUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routine-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", currentUser, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Routines you've created:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.container,\n        color: \"secondary\",\n        variant: \"contained\",\n        type: \"submit\",\n        onClick: showForm,\n        children: open ? 'Hide' : 'Create A New Routine'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(RoutineForm, {\n        setIsOpen: setIsOpen,\n        currentUser: currentUser,\n        setMyRoutines: setMyRoutines,\n        open: open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), myRoutines ? myRoutines.map((routine, index) => /*#__PURE__*/_jsxDEV(MyRoutine, {\n        currentUser: currentUser,\n        setMyRoutines: setMyRoutines,\n        creator: creator,\n        setCreator: setCreator,\n        routine: routine\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Use the form above to start creating routines.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: color = 'blue',\n    children: \"Sign in to see your routines or sign up to start creating one.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 15\n  }, this);\n};\n\n_s(MyRoutines, \"zNLpCQSXI1W/7bTndZLjZbqb/8k=\", true);\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/MyRoutines.js"],"names":["React","useEffect","useState","fetchUsername","getCurrentToken","fetchUserRoutines","MyRoutine","Button","RoutineForm","makeStyles","MyRoutines","currentUser","myRoutines","setMyRoutines","creator","setCreator","open","setIsOpen","Promise","all","then","data","showForm","useStyles","theme","container","display","flexWrap","position","margin","formControl","spacing","minWidth","textFields","width","classes","map","routine","index","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { fetchUsername, getCurrentToken, fetchUserRoutines } from '../api';\nimport MyRoutine from './MyRoutine';\nimport Button from '@material-ui/core/Button';\nimport RoutineForm from './RoutineForm';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst MyRoutines = ({ currentUser }) => {\n\n  const [myRoutines, setMyRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [open, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    Promise.all([fetchUserRoutines(currentUser)]).then(([data]) => {\n      setMyRoutines(data)})\n  }, [])\n\n\n\n  const showForm = () => {\n    if (open === false) {\n      setIsOpen(true)\n    }\n    else {\n      setIsOpen(false)\n    }\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      position: 'relative',\n      margin: '10px',\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120,\n    },\n    textFields: {\n      width: '350px',\n      margin: theme.spacing(2)\n    },\n  }));\n\n  const classes = useStyles();\n\nif(currentUser) {\n    return (\n    <div className='routine-card'>\n      <h1>Welcome, {currentUser}!</h1>\n      <h2>Routines you've created:</h2>\n      <Button\n        className={classes.container}\n        color=\"secondary\"\n        variant=\"contained\"\n        type=\"submit\"\n        onClick={showForm}>{open ? 'Hide' : 'Create A New Routine'}</Button>\n      <RoutineForm setIsOpen={setIsOpen} currentUser={currentUser} setMyRoutines={setMyRoutines} open={open} />\n      {myRoutines ? myRoutines.map((routine, index) =>\n        <MyRoutine\n          currentUser={currentUser}\n          setMyRoutines={setMyRoutines}\n          creator={creator}\n          setCreator={setCreator}\n          key={index}\n          routine={routine} />)\n        : <h1>Use the form above to start creating routines.</h1>}\n    </div>\n  )\n} else return <div style={color='blue'}>Sign in to see your routines or sign up to start creating one.</div>\n\n}\n\n\nexport default MyRoutines;"]},"metadata":{},"sourceType":"module"}