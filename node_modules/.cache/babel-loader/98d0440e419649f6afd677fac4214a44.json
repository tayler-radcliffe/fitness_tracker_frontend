{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { getCurrentToken, storeLoginToken } from '../api';\nimport '../components/register.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = ({\n  username,\n  password,\n  confirmedPassword,\n  setUsername,\n  setPassword,\n  setConfirmedPassword\n}) => {\n  _s();\n\n  const [token, setToken] = useState('');\n\n  const registerUser = async (username, password) => {\n    await fetch('https://fitnesstrac-kr.herokuapp.com/api/users/register', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n      const token = result.token;\n      setToken(token);\n      storeLoginToken(token);\n    }).catch(console.error);\n  };\n\n  if (getCurrentToken()) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this);\n  }\n\n  const handleClick = event => {\n    if (password !== confirmedPassword) {\n      return alert('Passwords must match');\n    } else {\n      event.preventDefault();\n      registerUser(username, password).then(data => {});\n    }\n  };\n\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '250px',\n      margin: theme.spacing(2),\n      marginTop: '5px'\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create an Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          type: \"text\",\n          value: username,\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Username\",\n          min: \"8\",\n          max: \"20\",\n          required: true,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          type: \"password\",\n          value: password,\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Password\",\n          min: \"8\",\n          max: \"20\",\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          type: \"password\",\n          value: confirmedPassword,\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Confirm Password\",\n          min: \"8\",\n          max: \"20\",\n          required: true,\n          onChange: e => setConfirmedPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            type: \"submit\",\n            color: \"primary\",\n            variant: \"contained\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"register-link\",\n          children: \"Already have an account? Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"sxpBjtwi9wfj8+ju4Vgljc9GwYY=\", true);\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/Register.js"],"names":["React","useState","Redirect","Link","getCurrentToken","storeLoginToken","FormControl","makeStyles","Button","OutlinedInput","TextField","Register","username","password","confirmedPassword","setUsername","setPassword","setConfirmedPassword","token","setToken","registerUser","fetch","method","headers","body","JSON","stringify","then","response","json","result","console","log","catch","error","handleClick","event","alert","preventDefault","data","useStyles","theme","container","display","flexWrap","formControl","margin","spacing","minWidth","textFields","width","marginTop","classes","shrink","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { getCurrentToken, storeLoginToken } from '../api';\nimport '../components/register.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport TextField from '@material-ui/core/TextField';\n\n\n\nconst Register = ({ username, password, confirmedPassword, setUsername, setPassword, setConfirmedPassword }) => {\n\n  const [token, setToken] = useState('');\n\n  const registerUser = async (username, password) => {\n    await fetch('https://fitnesstrac-kr.herokuapp.com/api/users/register', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => response.json())\n      .then(result => {\n        console.log(result);\n        const token = result.token;\n        setToken(token);\n        storeLoginToken(token);\n      })\n      .catch(console.error);\n  };\n \n  if(getCurrentToken()) {\n  return <Redirect to='/' /> }\n\n  const handleClick = (event) => {\n    if (password !== confirmedPassword) {\n      return alert('Passwords must match')\n    } else {\n      event.preventDefault();\n      registerUser(username, password).then((data) => {\n      })\n    }\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '250px',\n      margin: theme.spacing(2),\n      marginTop: '5px'\n    },\n  }));\n\n  const classes = useStyles();\n\n\n\n  return (\n    <div className=\"register-container\">\n      <form className=\"register-form\" onSubmit={handleClick}>\n        <h2>Create an Account</h2>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n\n          <TextField className={classes.textFields}\n            type='text'\n            value={username}\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            label='Username'\n            min='8' max='20' required\n            onChange={(e) => setUsername(e.target.value)}\n          />\n\n          <TextField className={classes.textFields}\n            type='password'\n            value={password}\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            label='Password'\n            min='8' max='20' required\n            onChange={(e) => setPassword(e.target.value)}\n          />\n\n          <TextField className={classes.textFields}\n            type='password'\n            value={confirmedPassword}\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            label='Confirm Password'\n            min='8' max='20' required\n            onChange={(e) => setConfirmedPassword(e.target.value)}\n          />\n          <div className=\"register-button\">\n            <Button\n              size='large'\n              type='submit'\n              color='primary'\n              variant=\"contained\"\n            >Register</Button>\n\n          </div>\n\n          <Link to=\"/login\" className=\"register-link\">\n            Already have an account? Sign in\n                </Link>\n        </FormControl>\n      </form>\n    </div>\n  )\n}\n\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}