{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { fetchUserRoutines, getCurrentToken, storeLoginToken } from '../api';\nimport './login.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  username,\n  setUsername,\n  password,\n  setPassword,\n  setCurrentUser,\n  setMyRoutines,\n  currentUser\n}) => {\n  _s();\n\n  const [token, setToken] = useState('');\n\n  const loginUser = async (username, password) => {\n    await fetch('https://fitnesstrac-kr.herokuapp.com/api/users/login', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n\n      if (result.error) {\n        alert(result.message);\n        setUsername('');\n        setPassword('');\n      } else {\n        const token = result.token;\n        console.log('This is your login token', token);\n        setToken(token);\n        storeLoginToken(token);\n        setCurrentUser(result.user.username);\n        setUsername('');\n        setPassword('');\n      }\n    }).catch(console.error);\n  };\n\n  const handleClick = async event => {\n    event.preventDefault();\n    loginUser(username, password);\n    const newRoutines = await fetchUserRoutines(currentUser);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '250px',\n      margin: theme.spacing(2),\n      marginTop: '5px'\n    }\n  }));\n  const classes = useStyles();\n\n  if (token) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/myroutines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          type: \"text\",\n          value: username,\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Username\",\n          min: \"8\",\n          max: \"20\",\n          required: true,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          type: \"password\",\n          value: password,\n          variant: \"outlined\",\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"Password\",\n          min: \"8\",\n          max: \"20\",\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            type: \"submit\",\n            color: \"primary\",\n            variant: \"contained\",\n            onClick: () => handleClick,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"login-link\",\n          children: \"Don't have an account? Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"sxpBjtwi9wfj8+ju4Vgljc9GwYY=\", true);\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/Login.js"],"names":["React","useState","Redirect","Link","fetchUserRoutines","getCurrentToken","storeLoginToken","FormControl","makeStyles","Button","OutlinedInput","TextField","Login","username","setUsername","password","setPassword","setCurrentUser","setMyRoutines","currentUser","token","setToken","loginUser","fetch","method","headers","body","JSON","stringify","then","response","json","result","console","log","error","alert","message","user","catch","handleClick","event","preventDefault","newRoutines","useStyles","theme","container","display","flexWrap","formControl","margin","spacing","minWidth","textFields","width","marginTop","classes","shrink","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { fetchUserRoutines, getCurrentToken, storeLoginToken } from '../api';\nimport './login.css'\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst Login = ({username, setUsername, password, setPassword, setCurrentUser, setMyRoutines, currentUser}) => {\n\n  const [token, setToken] = useState('');\n\n  const loginUser = async (username, password) => {\n    await fetch('https://fitnesstrac-kr.herokuapp.com/api/users/login', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => response.json())\n      .then(result => {\n        console.log(result);\n        if(result.error) {\n          alert(result.message);\n          setUsername('');\n          setPassword(''); \n        } else {\n        const token = result.token;\n        console.log('This is your login token', token)\n        setToken(token);\n        storeLoginToken(token);\n        setCurrentUser(result.user.username);\n        setUsername('');\n        setPassword(''); \n        }\n      })\n      .catch(console.error);\n  };\n\n  const handleClick = async (event) => {\n      event.preventDefault();\n      loginUser(username, password);\n      const newRoutines = await fetchUserRoutines(currentUser)\n      \n  };\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n        width: '250px',\n        margin: theme.spacing(2),\n        marginTop: '5px'\n      },\n  }));\n\n  const classes = useStyles();\n\n\n  if(token) {\n    return <Redirect to = '/myroutines' /> }\n\n    return (\n    <div className=\"login-container\">\n        <form className=\"login-form\" onSubmit={handleClick}>\n        <h2>Login here</h2>\n        <FormControl variant=\"outlined\"  className={classes.formControl}>\n                \n                <TextField className={classes.textFields}\n                     type='text' \n                     value={username}\n                     variant=\"outlined\"\n                     InputLabelProps={{\n                      shrink: true,\n                    }} \n                     label='Username' \n                     min='8' max='20' required \n                     onChange={(e) => setUsername(e.target.value) }\n                />\n        \n                <TextField className={classes.textFields}\n                    type='password' \n                    value={password}\n                    variant=\"outlined\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }} \n                    label='Password' \n                    min='8' max='20' required \n                    onChange={(e) => setPassword(e.target.value) }\n                />\n            <div className=\"login-button\">\n                <Button \n                  size='large'\n                  type='submit'\n                  color='primary'\n                  variant=\"contained\"\n                  onClick={() => handleClick}>Login</Button>\n            </div> \n            \n          <Link to=\"/\" className='login-link'>Don't have an account? Sign Up</Link>\n          </FormControl>\n        </form>\n    </div>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}