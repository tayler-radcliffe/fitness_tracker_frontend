{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/UpdateRoutineForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { getCurrentToken, fetchUserRoutines } from '../api';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createActivity } from './Activities';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateRoutineForm = ({\n  currentUser,\n  setMyRoutines,\n  setIsRoutineOpen,\n  routineOpen,\n  routine\n}) => {\n  _s();\n\n  const [routineName, setRoutineName] = useState('');\n  const [routineGoal, setRoutineGoal] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n\n  const updateRoutine = ({\n    routineName,\n    routineGoal,\n    isPublic\n  }) => {\n    fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines/${routine.id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${getCurrentToken()}`\n      },\n      body: JSON.stringify({\n        name: routineName,\n        goal: routineGoal,\n        isPublic: isPublic\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n    }).catch(console.error);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textFields: {\n      width: '250px',\n      margin: theme.spacing(1)\n    },\n    textFields: {\n      width: '250px',\n      margin: theme.spacing(1)\n    }\n  }));\n  const classes = useStyles();\n\n  if (routineOpen === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"updateRoutineForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: async e => {\n          e.preventDefault();\n          updateRoutine({\n            routineName,\n            routineGoal\n          });\n          const data = await fetchUserRoutines(currentUser);\n          setMyRoutines(data);\n          setRoutineName('');\n          setRoutineGoal('');\n          setIsRoutineOpen(false);\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          onChange: e => setRoutineName(e.target.value),\n          value: routineName,\n          size: \"small\",\n          variant: \"outlined\",\n          label: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.textFields,\n          onChange: e => setRoutineGoal(e.target.value),\n          label: \"Goal\",\n          value: routineGoal,\n          size: \"small\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.textFields,\n          children: \"Allow others to see? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: isPublic,\n          type: \"checkbox\",\n          color: \"primary\",\n          onClick: () => {\n            if (isPublic === false) {\n              setIsPublic(true);\n            } else {\n              setIsPublic(false);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.textFields,\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Update Routine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 17\n  }, this);\n};\n\n_s(UpdateRoutineForm, \"xyXomnH6u0h0fbCXEo9dhl0Qaco=\", true);\n\n_c = UpdateRoutineForm;\nexport default UpdateRoutineForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateRoutineForm\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/UpdateRoutineForm.js"],"names":["React","useState","getCurrentToken","fetchUserRoutines","Button","TextField","FormControl","makeStyles","createActivity","Checkbox","UpdateRoutineForm","currentUser","setMyRoutines","setIsRoutineOpen","routineOpen","routine","routineName","setRoutineName","routineGoal","setRoutineGoal","isPublic","setIsPublic","updateRoutine","fetch","id","method","headers","body","JSON","stringify","name","goal","then","response","json","result","console","log","catch","error","useStyles","theme","container","display","flexWrap","textFields","width","margin","spacing","classes","e","preventDefault","data","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { getCurrentToken, fetchUserRoutines } from '../api'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createActivity } from './Activities';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nconst UpdateRoutineForm = ({currentUser, setMyRoutines, setIsRoutineOpen, routineOpen, routine}) => {\n\n    const [routineName, setRoutineName] = useState('');\n    const [routineGoal, setRoutineGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false);\n\n    const updateRoutine = ({routineName, routineGoal, isPublic}) => {\n        fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines/${routine.id}`, {\n            method: \"PATCH\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${getCurrentToken()}`\n              },\n            body: JSON.stringify({\n                name: routineName,\n                goal: routineGoal,\n                isPublic: isPublic\n            })\n            }).then(response => response.json())\n            .then(result => {\n                console.log(result);\n            })\n            .catch(console.error);\n    }\n\n    const useStyles = makeStyles((theme) => ({\n      container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n\n      },\n      textFields: {\n          width: '250px',\n          margin: theme.spacing(1),\n        },\n        textFields: {\n          width: '250px',\n          margin: theme.spacing(1)\n        },\n    }));\n  \n    const classes = useStyles();\n    \n\nif(routineOpen === true) {\n    return (\n        <div className='updateRoutineForm'>\n            <form onSubmit={async (e) => {\n              e.preventDefault();\n              updateRoutine({routineName, routineGoal});\n              const data = await fetchUserRoutines(currentUser);\n              setMyRoutines(data);\n              setRoutineName('');\n              setRoutineGoal('');\n              setIsRoutineOpen(false);\n\n            }} >\n              <TextField className={classes.textFields}\n              onChange={(e) => setRoutineName(e.target.value)} \n              value={routineName} \n              size='small'\n              variant=\"outlined\"\n              label='Name' \n              />\n              <TextField className={classes.textFields}\n              onChange={(e) => setRoutineGoal(e.target.value)} \n              label='Goal'\n              value={routineGoal} \n              size='small'\n               variant=\"outlined\" />\n          \n            <label className={classes.textFields}>Allow others to see? </label>\n              <Checkbox \n              value={isPublic} \n               type='checkbox'\n               color='primary' onClick={() => {\n                  if(isPublic === false){\n                      setIsPublic(true)}\n                      else {\n                      setIsPublic(false)}}} />\n              <Button className={classes.textFields}\n              type='submit'\n              color='primary'\n              variant='contained'>Update Routine</Button>\n            </form>\n         </div>\n    )} \n    else return <div></div>;\n}\n\n\nexport default UpdateRoutineForm;"]},"metadata":{},"sourceType":"module"}