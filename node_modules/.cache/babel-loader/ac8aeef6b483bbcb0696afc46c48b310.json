{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/Activities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchActivites, getCurrentToken } from '../api';\nimport Activity from './Activity';\nimport Button from '@material-ui/core/Button';\nimport AddActivityForm from './AddActivityForm';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const createActivity = async ({\n  activityName,\n  activityDescription\n}) => {\n  await fetch('http://fitnesstrac-kr.herokuapp.com/api/activities', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getCurrentToken()}`\n    },\n    body: JSON.stringify({\n      name: activityName,\n      description: activityDescription\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n};\n\nconst Activities = () => {\n  _s();\n\n  const [activities, setActivities] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [open, setIsOpen] = useState(false);\n  useEffect(() => {\n    fetchActivites().then(data => setActivities(data));\n    console.log(activities);\n  }, []);\n\n  const showForm = () => {\n    if (open === false) {\n      setIsOpen(true);\n    } else {\n      setIsOpen(false);\n    }\n  };\n\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      position: 'relative',\n      overflow: 'hidden',\n      margin: '10px'\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120\n    },\n    textFields: {\n      width: '350px',\n      margin: theme.spacing(2)\n    }\n  }));\n  const classes = useStyles();\n\n  if (getCurrentToken()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activities\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Activities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.container,\n        onClick: showForm,\n        color: \"secondary\",\n        variant: \"contained\",\n        children: \"Create A New Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddActivityForm, {\n        open: open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), activities ? activities.map((activity, index) => /*#__PURE__*/_jsxDEV(Activity, {\n        creator: creator,\n        setCreator: setCreator,\n        activity: activity\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 63\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activities\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Activities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), activities ? activities.map((activity, index) => /*#__PURE__*/_jsxDEV(Activity, {\n        creator: creator,\n        setCreator: setCreator,\n        activity: activity\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 63\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Activities, \"pBFvPnjIyITmAvdkVqP0k0BRrb8=\", true);\n\n_c = Activities;\nexport default Activities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activities\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/Activities.js"],"names":["React","useEffect","useState","fetchActivites","getCurrentToken","Activity","Button","AddActivityForm","makeStyles","createActivity","activityName","activityDescription","fetch","method","headers","body","JSON","stringify","name","description","then","response","json","result","console","log","catch","error","Activities","activities","setActivities","creator","setCreator","open","setIsOpen","data","showForm","useStyles","theme","container","display","flexWrap","position","overflow","margin","formControl","spacing","minWidth","textFields","width","classes","map","activity","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchActivites, getCurrentToken } from '../api';\nimport Activity from './Activity';\nimport Button from '@material-ui/core/Button';\nimport AddActivityForm from './AddActivityForm';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nexport const createActivity = async ({activityName, activityDescription}) => {\n    await fetch('http://fitnesstrac-kr.herokuapp.com/api/activities', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${getCurrentToken()}`\n          },\n        body: JSON.stringify({\n            name: activityName,\n            description: activityDescription\n      })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n    })\n    .catch(console.error);\n}\n\n\nconst Activities = () => {\n\n    const [activities, setActivities] = useState([]);\n    const [creator, setCreator] = useState('');\n    const [open, setIsOpen] = useState(false);\n\n    useEffect(() => {\n        fetchActivites()\n        .then((data) => setActivities(data))\n        console.log(activities)\n    }, [])\n\n    const showForm = () => {\n      if (open === false){\n           setIsOpen(true)}\n      else {\n          setIsOpen(false)\n      }\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      position: 'relative',\n      overflow: 'hidden',\n      margin: '10px',\n    },\n    formControl: {\n      margin: theme.spacing(2),\n      minWidth: 120,\n    },\n    textFields: {\n        width: '350px',\n        margin: theme.spacing(2)\n      },\n  }));\n\n  const classes = useStyles();\n\n  if(getCurrentToken()) {\n    return (\n      <div className='activities'>\n         <h1>Activities</h1>\n          <Button className={classes.container}\n            onClick={showForm}\n            color='secondary'\n            variant='contained'>Create A New Activity</Button>\n          <AddActivityForm open={open}/>\n            {activities ? activities.map((activity, index) => <Activity creator={creator} setCreator={setCreator} key={index} activity={activity} /> ) : null }\n         </div>\n    )} else {\n        return (\n            <div className='activities'>\n            <h1>Activities</h1>\n            {activities ? activities.map((activity, index) => <Activity creator={creator} setCreator={setCreator} key={index} activity={activity} /> ) : null }\n         </div>\n\n        )\n    }\n}\n\n\nexport default Activities;"]},"metadata":{},"sourceType":"module"}